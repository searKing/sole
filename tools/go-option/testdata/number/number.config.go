// Code generated by "go-option -type Number -config=true"; EDIT IT ANYWAY.
// Install go-option by "go get install github.com/searKing/golang/tools/go-option"

package main

import (
	"fmt"
)

// NumberConfig is config param as factory config
// Code borrowed from https://github.com/kubernetes/kubernetes
// call chains: NewNumberConfig[T comparable] -> Complete[T] -> Validate[T] -> New[T]|Apply[T]
type NumberConfig[T comparable] struct {
	// TODO Add config fields here
}
type completedNumberConfig[T comparable] struct {
	*NumberConfig[T]

	//===========================================================================
	// values below here are filled in during completion
	//===========================================================================
}

// CompletedNumberConfig is config ready to use.
type CompletedNumberConfig[T comparable] struct {
	// Embed a private pointer that cannot be instantiated outside of this package.
	*completedNumberConfig[T]
}

// NewNumberConfig returns a Config struct with the default values
func NewNumberConfig[T comparable]() *NumberConfig[T] {
	// TODO Add default configs here
	return &NumberConfig[T]{}
}

// Complete fills in any fields not set that are required to have valid data and can be derived
// from other fields. If you're going to ApplyOptions, do that first. It's mutating the receiver.
func (o *NumberConfig[T]) Complete() CompletedNumberConfig[T] {
	// TODO Add custom codes here
	return CompletedNumberConfig[T]{&completedNumberConfig[T]{o}}
}

// Validate checks NumberConfig[T] and return a slice of found errs.
func (o *NumberConfig[T]) Validate() []error {
	var errs []error
	// TODO Add custom validate codes here
	return errs
}

// New creates a new server which logically combines the handling chain with the passed server.
// The handler chain in particular can be difficult as it starts delegating.
// New usually called after Complete
func (c completedNumberConfig[T]) New() (*Number[T], error) {
	// TODO Add custom codes here
	return nil, fmt.Errorf("not implemented")
}

// Apply set options and something else as global init, act likes New but without NumberConfig's instance
// Apply usually called after Complete
func (c completedNumberConfig[T]) Apply() error {
	// TODO Add custom codes here
	return fmt.Errorf("not implemented")
}
