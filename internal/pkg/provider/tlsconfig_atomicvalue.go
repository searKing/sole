// Copyright 2020 The searKing Author. All rights reserved.
// Use of this source code is governed by a BSD-style
// license that can be found in the LICENSE file.

// Code generated by "go-atomicvalue -type tlsConfig<*crypto/tls.Config>"; DO NOT EDIT.

package provider

import (
	"crypto/tls"
	"sync/atomic"
)

func _() {
	// An "cannot convert tlsConfig literal (type tlsConfig) to type atomic.Value" compiler error signifies that the base type have changed.
	// Re-run the go-atomicvalue command to generate them again.
	_ = (atomic.Value)(tlsConfig{})
}
func (m *tlsConfig) Store(value *tls.Config) {
	(*atomic.Value)(m).Store(value)
}

func (m *tlsConfig) Load() *tls.Config {
	value := (*atomic.Value)(m).Load()
	if value == nil {
		return nil
	}
	return value.(*tls.Config)
}
