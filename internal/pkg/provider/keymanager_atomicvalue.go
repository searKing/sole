// Copyright 2020 The searKing Author. All rights reserved.
// Use of this source code is governed by a BSD-style
// license that can be found in the LICENSE file.

// Code generated by "go-atomicvalue -type keyManager<github.com/searKing/sole/app/core/keys.Manager>"; DO NOT EDIT.

package provider

import (
	"sync/atomic"

	"github.com/searKing/sole/pkg/database/models/key"
)

func _() {
	// An "cannot convert keyManager literal (type keyManager) to type atomic.Value" compiler error signifies that the base type have changed.
	// Re-run the go-atomicvalue command to generate them again.
	_ = (atomic.Value)(keyManager{})
}

var _nil_keyManager_keys_Manager_value = func() (val key.Manager) { return }()

func (m *keyManager) Store(value key.Manager) {
	(*atomic.Value)(m).Store(value)
}

func (m *keyManager) Load() key.Manager {
	value := (*atomic.Value)(m).Load()
	if value == nil {
		return _nil_keyManager_keys_Manager_value
	}
	return value.(key.Manager)
}
