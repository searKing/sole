// Code generated by "go-option -type slogger"; DO NOT EDIT.
// Install go-option by "go get install github.com/searKing/golang/tools/go-option"

package grpclog

import "log/slog"

// A SloggerOption sets options.
type SloggerOption interface {
	apply(*slogger)
}

// EmptySloggerOption does not alter the configuration. It can be embedded
// in another structure to build custom options.
//
// This API is EXPERIMENTAL.
type EmptySloggerOption struct{}

func (EmptySloggerOption) apply(*slogger) {}

// SloggerOptionFunc wraps a function that modifies slogger into an
// implementation of the SloggerOption interface.
type SloggerOptionFunc func(*slogger)

func (f SloggerOptionFunc) apply(do *slogger) {
	f(do)
}

// ApplyOptions call apply() for all options one by one
func (o *slogger) ApplyOptions(options ...SloggerOption) *slogger {
	for _, opt := range options {
		if opt == nil {
			continue
		}
		opt.apply(o)
	}
	return o
}

// withSlogger sets slogger.
func withSlogger(v slogger) SloggerOption {
	return SloggerOptionFunc(func(o *slogger) {
		*o = v
	})
}

// WithSloggerHandler sets Handler in slogger.
func WithSloggerHandler(v slog.Handler) SloggerOption {
	return SloggerOptionFunc(func(o *slogger) {
		o.Handler = v
	})
}
