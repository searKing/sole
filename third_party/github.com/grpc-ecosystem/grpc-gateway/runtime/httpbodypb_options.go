// Code generated by "go-option -type=HTTPBodyPb"; DO NOT EDIT.
// Install go-option by "go get install github.com/searKing/golang/tools/go-option"

package runtime

// A HTTPBodyPbOption sets options.
type HTTPBodyPbOption interface {
	apply(*HTTPBodyPb)
}

// EmptyHTTPBodyPbOption does not alter the configuration. It can be embedded
// in another structure to build custom options.
//
// This API is EXPERIMENTAL.
type EmptyHTTPBodyPbOption struct{}

func (EmptyHTTPBodyPbOption) apply(*HTTPBodyPb) {}

// HTTPBodyPbOptionFunc wraps a function that modifies HTTPBodyPb into an
// implementation of the HTTPBodyPbOption interface.
type HTTPBodyPbOptionFunc func(*HTTPBodyPb)

func (f HTTPBodyPbOptionFunc) apply(do *HTTPBodyPb) {
	f(do)
}

// ApplyOptions call apply() for all options one by one
func (o *HTTPBodyPb) ApplyOptions(options ...HTTPBodyPbOption) *HTTPBodyPb {
	for _, opt := range options {
		if opt == nil {
			continue
		}
		opt.apply(o)
	}
	return o
}

// WithHTTPBodyPb sets HTTPBodyPb.
func WithHTTPBodyPb(v HTTPBodyPb) HTTPBodyPbOption {
	return HTTPBodyPbOptionFunc(func(o *HTTPBodyPb) {
		*o = v
	})
}

// sample code for option, default for nothing to change
func _HTTPBodyPbOptionWithDefault() HTTPBodyPbOption {
	return HTTPBodyPbOptionFunc(func(*HTTPBodyPb) {
		// nothing to change
	})
}
