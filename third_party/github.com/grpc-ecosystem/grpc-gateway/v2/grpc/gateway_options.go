// Copyright 2020 The searKing Author. All rights reserved.
// Use of this source code is governed by a BSD-style
// license that can be found in the LICENSE file.

// Code generated by "go-option -type=Gateway"; DO NOT EDIT.

package grpc

var _default_Gateway_value = func() (val Gateway) { return }()

// A GatewayOption sets options.
type GatewayOption interface {
	apply(*Gateway)
}

// EmptyGatewayOption does not alter the configuration. It can be embedded
// in another structure to build custom options.
//
// This API is EXPERIMENTAL.
type EmptyGatewayOption struct{}

func (EmptyGatewayOption) apply(*Gateway) {}

// GatewayOptionFunc wraps a function that modifies Gateway into an
// implementation of the GatewayOption interface.
type GatewayOptionFunc func(*Gateway)

func (f GatewayOptionFunc) apply(do *Gateway) {
	f(do)
}

func (gateway *Gateway) ApplyOptions(options ...GatewayOption) *Gateway {
	for _, opt := range options {
		if opt == nil {
			continue
		}
		opt.apply(gateway)
	}
	return gateway
}
