// Copyright 2020 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

syntax = "proto3";

package google.cloud.retail.v2;

import "google/api/annotations.proto";
import "google/api/field_behavior.proto";
import "google/cloud/retail/v2/product.proto";
import "google/cloud/retail/v2/user_event.proto";
import "google/protobuf/timestamp.proto";

option csharp_namespace = "Google.Cloud.Retail.V2";
option go_package = "google.golang.org/genproto/googleapis/cloud/retail/v2;retail";
option java_multiple_files = true;
option java_outer_classname = "PurgeConfigProto";
option java_package = "com.google.cloud.retail.v2";
option objc_class_prefix = "RETAIL";
option php_namespace = "Google\\Cloud\\Retail\\V2";
option ruby_package = "Google::Cloud::Retail::V2";

// Metadata related to the progress of the Purge operation.
// This will be returned by the google.longrunning.Operation.metadata field.
message PurgeMetadata {
  // The ID of the request / operation.
  string operation = 1;

  // Operation create time.
  google.protobuf.Timestamp create_time = 2;
}

// Request message for PurgeProducts method.
message PurgeProductsRequest {
  // Required. The resource name of the catalog under which the products are
  // created. The format is
  // "projects/${projectId}/locations/global/catalogs/${catalogId}"
  string parent = 1 [(google.api.field_behavior) = REQUIRED];

  // Required. Filter matching the products to be purged. Only supported value
  // at the moment is "*" (all items).
  string filter = 2 [(google.api.field_behavior) = REQUIRED];

  // The default value is false. Override this flag to true to
  // actually perform the purge. If the field is not set to true, a sampling of
  // products to be deleted will be returned.
  bool force = 3;
}

// Response of the PurgeProductsRequest. If the long running operation is
// successfully done, then this message is returned by the
// google.longrunning.Operations.response field.
message PurgeProductsResponse {
  // The total count of products purged as a result of the operation.
  int64 purged_count = 1;
  // A random sampling of products deleted (or will be deleted) depending
  // on the `force` property in the request. Max of 500 items will be returned.
  // Currently, this is only populated if force=false.
  repeated Product products_sample = 2;
}

// Request message for PurgeUserEvents method.
message PurgeUserEventsRequest {
  // Required. The resource name of the event_store under which the events are
  // created. The format is
  //
  // "projects/${projectId}/locations/global/catalogs/${catalogId}/eventStores/${eventStoreId}"
  string parent = 1 [(google.api.field_behavior) = REQUIRED];

  // Required. The filter string to specify the events to be deleted. Empty
  // string filter is not allowed. The eligible fields
  // for filtering are:
  //
  // * `eventType`: UserEvent.eventType field of type string.
  // * `eventTime`: in ISO 8601 "zulu" format.
  // * `visitorId`: field of type string. Specifying this will delete all
  //   events associated with a visitor.
  // * `userId`: field of type string. Specifying this will delete all events
  //   associated with a user.
  //
  // Examples:
  //
  // * Deleting all events in a time range:
  //   `eventTime > "2012-04-23T18:25:43.511Z"
  //   eventTime < "2012-04-23T18:30:43.511Z"`
  // * Deleting specific eventType in time range:
  //   `eventTime > "2012-04-23T18:25:43.511Z" eventType = "detail-page-view"`
  // * Deleting all events for a specific visitor:
  //   `visitorId = "visitor1024"`
  //
  // The filtering fields are assumed to have an implicit AND.
  string filter = 2 [(google.api.field_behavior) = REQUIRED];

  // The default value is false. Override this flag to true to
  // actually perform the purge. If the field is not set to true, a sampling of
  // events to be deleted will be returned.
  bool force = 3;
}

// Response of the PurgeUserEventsRequest. If the long running operation is
// successfully done, then this message is returned by the
// google.longrunning.Operations.response field.
message PurgeUserEventsResponse {
  // The total count of events purged as a result of the operation.
  int64 purged_events_count = 1;

  // A sampling of events deleted (or will be deleted) depending on the `force`
  // property in the request. Max of 500 items will be returned.
  repeated UserEvent user_events_sample = 2;
}
