// Code generated by "go-atomicvalue -type sharedResult<Sink>"; DO NOT EDIT.

package terminal

import "sync/atomic"

func _() {
	// An "cannot convert sharedResult literal (type sharedResult) to type atomic.Value" compiler error signifies that the base type have changed.
	// Re-run the go-atomicvalue command to generate them again.
	_ = (atomic.Value)(sharedResult{})
}

var _nil_sharedResult_Sink_value = func() (val Sink) { return }()

func (m *sharedResult) Store(value Sink) {
	(*atomic.Value)(m).Store(value)
}

func (m *sharedResult) Load() Sink {
	value := (*atomic.Value)(m).Load()
	if value == nil {
		return _nil_sharedResult_Sink_value
	}
	return value.(Sink)
}
