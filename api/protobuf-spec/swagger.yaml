consumes:
    - application/json
definitions:
    ErrorErrorProto:
        description: Deprecated. This message is only used by error format v1.
        type: object
    errorsErrorStatus:
        description: |-
            This message has the same semantics as `google.rpc.Status`. It uses HTTP
            status code instead of gRPC status code. It has extra fields `status` and
            `errors` for backward compatibility with [Google API Client
            Libraries](https://developers.google.com/api-client-library).
        properties:
            code:
                description: The HTTP status code that corresponds to `google.rpc.Status.code`.
                format: int32
                type: integer
            details:
                description: This corresponds to `google.rpc.Status.details`.
                items:
                    $ref: '#/definitions/protobufAny'
                    type: object
                type: array
            errors:
                description: Deprecated. This field is only used by error format v1.
                items:
                    $ref: '#/definitions/ErrorErrorProto'
                    type: object
                type: array
            message:
                description: This corresponds to `google.rpc.Status.message`.
                type: string
            status:
                $ref: '#/definitions/rpcCode'
                description: This is the enum version for `google.rpc.Status.code`.
        type: object
    googlerpcStatus:
        properties:
            code:
                format: int32
                type: integer
            details:
                items:
                    $ref: '#/definitions/protobufAny'
                    type: object
                type: array
            message:
                type: string
        type: object
    protobufAny:
        additionalProperties: false
        properties:
            '@type':
                type: string
        type: object
    rpcCode:
        default: OK
        description: |-
            The canonical error codes for gRPC APIs.


            Sometimes multiple error codes may apply.  Services should return
            the most specific error code that applies.  For example, prefer
            `OUT_OF_RANGE` over `FAILED_PRECONDITION` if both codes apply.
            Similarly prefer `NOT_FOUND` or `ALREADY_EXISTS` over `FAILED_PRECONDITION`.

             - OK: Not an error; returned on success.

            HTTP Mapping: 200 OK
             - CANCELLED: The operation was cancelled, typically by the caller.

            HTTP Mapping: 499 Client Closed Request
             - UNKNOWN: Unknown error.  For example, this error may be returned when
            a `Status` value received from another address space belongs to
            an error space that is not known in this address space.  Also
            errors raised by APIs that do not return enough error information
            may be converted to this error.

            HTTP Mapping: 500 Internal Server Error
             - INVALID_ARGUMENT: The client specified an invalid argument.  Note that this differs
            from `FAILED_PRECONDITION`.  `INVALID_ARGUMENT` indicates arguments
            that are problematic regardless of the state of the system
            (e.g., a malformed file name).

            HTTP Mapping: 400 Bad Request
             - DEADLINE_EXCEEDED: The deadline expired before the operation could complete. For operations
            that change the state of the system, this error may be returned
            even if the operation has completed successfully.  For example, a
            successful response from a server could have been delayed long
            enough for the deadline to expire.

            HTTP Mapping: 504 Gateway Timeout
             - NOT_FOUND: Some requested entity (e.g., file or directory) was not found.

            Note to server developers: if a request is denied for an entire class
            of users, such as gradual feature rollout or undocumented allowlist,
            `NOT_FOUND` may be used. If a request is denied for some users within
            a class of users, such as user-based access control, `PERMISSION_DENIED`
            must be used.

            HTTP Mapping: 404 Not Found
             - ALREADY_EXISTS: The entity that a client attempted to create (e.g., file or directory)
            already exists.

            HTTP Mapping: 409 Conflict
             - PERMISSION_DENIED: The caller does not have permission to execute the specified
            operation. `PERMISSION_DENIED` must not be used for rejections
            caused by exhausting some resource (use `RESOURCE_EXHAUSTED`
            instead for those errors). `PERMISSION_DENIED` must not be
            used if the caller can not be identified (use `UNAUTHENTICATED`
            instead for those errors). This error code does not imply the
            request is valid or the requested entity exists or satisfies
            other pre-conditions.

            HTTP Mapping: 403 Forbidden
             - UNAUTHENTICATED: The request does not have valid authentication credentials for the
            operation.

            HTTP Mapping: 401 Unauthorized
             - RESOURCE_EXHAUSTED: Some resource has been exhausted, perhaps a per-user quota, or
            perhaps the entire file system is out of space.

            HTTP Mapping: 429 Too Many Requests
             - FAILED_PRECONDITION: The operation was rejected because the system is not in a state
            required for the operation's execution.  For example, the directory
            to be deleted is non-empty, an rmdir operation is applied to
            a non-directory, etc.

            Service implementors can use the following guidelines to decide
            between `FAILED_PRECONDITION`, `ABORTED`, and `UNAVAILABLE`:
             (a) Use `UNAVAILABLE` if the client can retry just the failing call.
             (b) Use `ABORTED` if the client should retry at a higher level. For
                 example, when a client-specified test-and-set fails, indicating the
                 client should restart a read-modify-write sequence.
             (c) Use `FAILED_PRECONDITION` if the client should not retry until
                 the system state has been explicitly fixed. For example, if an "rmdir"
                 fails because the directory is non-empty, `FAILED_PRECONDITION`
                 should be returned since the client should not retry unless
                 the files are deleted from the directory.

            HTTP Mapping: 400 Bad Request
             - ABORTED: The operation was aborted, typically due to a concurrency issue such as
            a sequencer check failure or transaction abort.

            See the guidelines above for deciding between `FAILED_PRECONDITION`,
            `ABORTED`, and `UNAVAILABLE`.

            HTTP Mapping: 409 Conflict
             - OUT_OF_RANGE: The operation was attempted past the valid range.  E.g., seeking or
            reading past end-of-file.

            Unlike `INVALID_ARGUMENT`, this error indicates a problem that may
            be fixed if the system state changes. For example, a 32-bit file
            system will generate `INVALID_ARGUMENT` if asked to read at an
            offset that is not in the range [0,2^32-1], but it will generate
            `OUT_OF_RANGE` if asked to read from an offset past the current
            file size.

            There is a fair bit of overlap between `FAILED_PRECONDITION` and
            `OUT_OF_RANGE`.  We recommend using `OUT_OF_RANGE` (the more specific
            error) when it applies so that callers who are iterating through
            a space can easily look for an `OUT_OF_RANGE` error to detect when
            they are done.

            HTTP Mapping: 400 Bad Request
             - UNIMPLEMENTED: The operation is not implemented or is not supported/enabled in this
            service.

            HTTP Mapping: 501 Not Implemented
             - INTERNAL: Internal errors.  This means that some invariants expected by the
            underlying system have been broken.  This error code is reserved
            for serious errors.

            HTTP Mapping: 500 Internal Server Error
             - UNAVAILABLE: The service is currently unavailable.  This is most likely a
            transient condition, which can be corrected by retrying with
            a backoff. Note that it is not always safe to retry
            non-idempotent operations.

            See the guidelines above for deciding between `FAILED_PRECONDITION`,
            `ABORTED`, and `UNAVAILABLE`.

            HTTP Mapping: 503 Service Unavailable
             - DATA_LOSS: Unrecoverable data loss or corruption.

            HTTP Mapping: 500 Internal Server Error
        enum:
            - OK
            - CANCELLED
            - UNKNOWN
            - INVALID_ARGUMENT
            - DEADLINE_EXCEEDED
            - NOT_FOUND
            - ALREADY_EXISTS
            - PERMISSION_DENIED
            - UNAUTHENTICATED
            - RESOURCE_EXHAUSTED
            - FAILED_PRECONDITION
            - ABORTED
            - OUT_OF_RANGE
            - UNIMPLEMENTED
            - INTERNAL
            - UNAVAILABLE
            - DATA_LOSS
        type: string
    rpcStatus:
        properties:
            code:
                format: int32
                type: integer
            details:
                items:
                    $ref: '#/definitions/protobufAny'
                    type: object
                type: array
            message:
                type: string
        type: object
    v1DateRequest:
        properties:
            RequestId:
                type: string
        type: object
    v1DateResponse:
        properties:
            date:
                type: string
            error:
                $ref: '#/definitions/errorsErrorStatus'
            request_id:
                type: string
        type: object
    v1EncryptRequest:
        properties:
            AppId:
                title: the ID of the application
                type: string
            PlainText:
                format: byte
                title: plain text
                type: string
            RequestId:
                title: unique id for the request
                type: string
        type: object
    v1EncryptResponse:
        properties:
            CipherText:
                format: byte
                title: cipher text
                type: string
            RequestId:
                title: same as request_id in the request, generate if not set
                type: string
            error:
                $ref: '#/definitions/errorsErrorStatus'
        type: object
    v1ExampleRequest:
        properties:
            AppId:
                title: the ID of the application
                type: string
            Message:
                title: message
                type: string
            RequestId:
                title: unique id for the request
                type: string
        type: object
    v1ExampleResponse:
        properties:
            Message:
                title: message echo
                type: string
            RequestId:
                title: same as request_id in the request, generate if not set
                type: string
            error:
                $ref: '#/definitions/errorsErrorStatus'
        type: object
    v1HealthRequest:
        properties:
            AppId:
                title: the ID of the application
                type: string
            RequestId:
                title: unique id for the request
                type: string
        type: object
    v1HealthResponse:
        properties:
            Date:
                title: query date time
                type: string
            RequestId:
                title: same as request_id in the request, generate if not set
                type: string
            Status:
                title: health check status
                type: string
            error:
                $ref: '#/definitions/errorsErrorStatus'
        type: object
info:
    contact:
        email: searKingChan@gmail.com
        name: sole
        url: https://github.com/searKing/sole
    title: sole
    version: 1.0.0
paths:
    /Encrypt:
        post:
            operationId: SoleTemplateService_Encrypt2
            parameters:
                - in: body
                  name: body
                  required: true
                  schema:
                    $ref: '#/definitions/v1EncryptRequest'
            responses:
                "200":
                    description: A successful response.
                    schema:
                        $ref: '#/definitions/v1EncryptResponse'
                default:
                    description: An unexpected error response.
                    schema:
                        $ref: '#/definitions/googlerpcStatus'
            summary: Text Encrypt
            tags:
                - SoleTemplateService
    /Example:
        post:
            operationId: SoleTemplateService_Example2
            parameters:
                - in: body
                  name: body
                  required: true
                  schema:
                    $ref: '#/definitions/v1ExampleRequest'
            responses:
                "200":
                    description: A successful response.
                    schema:
                        $ref: '#/definitions/v1ExampleResponse'
                default:
                    description: An unexpected error response.
                    schema:
                        $ref: '#/definitions/googlerpcStatus'
            summary: |-
                Example Service Interface
                TODO: Replace with your own service interface
            tags:
                - SoleTemplateService
    /api/v1/solesamples/encrypt:
        post:
            operationId: SoleSamplesService_Encrypt
            parameters:
                - in: body
                  name: body
                  required: true
                  schema:
                    $ref: '#/definitions/v1EncryptRequest'
            responses:
                "200":
                    description: A successful response.
                    schema:
                        $ref: '#/definitions/v1EncryptResponse'
                default:
                    description: An unexpected error response.
                    schema:
                        $ref: '#/definitions/googlerpcStatus'
            summary: Text Encrypt
            tags:
                - SoleSamplesService
    /api/v1/solesamples/example:
        post:
            operationId: SoleSamplesService_Example
            parameters:
                - in: body
                  name: body
                  required: true
                  schema:
                    $ref: '#/definitions/v1ExampleRequest'
            responses:
                "200":
                    description: A successful response.
                    schema:
                        $ref: '#/definitions/v1ExampleResponse'
                default:
                    description: An unexpected error response.
                    schema:
                        $ref: '#/definitions/googlerpcStatus'
            summary: |-
                Example Service Interface
                TODO: Replace with your own service interface
            tags:
                - SoleSamplesService
    /api/v1/solesamples/healthz:
        get:
            operationId: SoleSamplesService_Health
            parameters:
                - description: unique id for the request
                  in: query
                  name: RequestId
                  type: string
                - description: the ID of the application
                  in: query
                  name: AppId
                  type: string
            responses:
                "200":
                    description: A successful response.
                    schema:
                        $ref: '#/definitions/v1HealthResponse'
                default:
                    description: An unexpected error response.
                    schema:
                        $ref: '#/definitions/googlerpcStatus'
            summary: Health Check
            tags:
                - SoleSamplesService
        post:
            operationId: SoleSamplesService_Health2
            parameters:
                - in: body
                  name: body
                  required: true
                  schema:
                    $ref: '#/definitions/v1HealthRequest'
            responses:
                "200":
                    description: A successful response.
                    schema:
                        $ref: '#/definitions/v1HealthResponse'
                default:
                    description: An unexpected error response.
                    schema:
                        $ref: '#/definitions/googlerpcStatus'
            summary: Health Check
            tags:
                - SoleSamplesService
    /api/v1/soletemplate/encrypt:
        post:
            operationId: SoleTemplateService_Encrypt
            parameters:
                - in: body
                  name: body
                  required: true
                  schema:
                    $ref: '#/definitions/v1EncryptRequest'
            responses:
                "200":
                    description: A successful response.
                    schema:
                        $ref: '#/definitions/v1EncryptResponse'
                default:
                    description: An unexpected error response.
                    schema:
                        $ref: '#/definitions/googlerpcStatus'
            summary: Text Encrypt
            tags:
                - SoleTemplateService
    /api/v1/soletemplate/example:
        post:
            operationId: SoleTemplateService_Example
            parameters:
                - in: body
                  name: body
                  required: true
                  schema:
                    $ref: '#/definitions/v1ExampleRequest'
            responses:
                "200":
                    description: A successful response.
                    schema:
                        $ref: '#/definitions/v1ExampleResponse'
                default:
                    description: An unexpected error response.
                    schema:
                        $ref: '#/definitions/googlerpcStatus'
            summary: |-
                Example Service Interface
                TODO: Replace with your own service interface
            tags:
                - SoleTemplateService
    /api/v1/soletemplate/healthz:
        get:
            operationId: SoleTemplateService_Health
            parameters:
                - description: unique id for the request
                  in: query
                  name: RequestId
                  type: string
                - description: the ID of the application
                  in: query
                  name: AppId
                  type: string
            responses:
                "200":
                    description: A successful response.
                    schema:
                        $ref: '#/definitions/v1HealthResponse'
                default:
                    description: An unexpected error response.
                    schema:
                        $ref: '#/definitions/googlerpcStatus'
            summary: Health Check
            tags:
                - SoleTemplateService
        post:
            operationId: SoleTemplateService_Health2
            parameters:
                - in: body
                  name: body
                  required: true
                  schema:
                    $ref: '#/definitions/v1HealthRequest'
            responses:
                "200":
                    description: A successful response.
                    schema:
                        $ref: '#/definitions/v1HealthResponse'
                default:
                    description: An unexpected error response.
                    schema:
                        $ref: '#/definitions/googlerpcStatus'
            summary: Health Check
            tags:
                - SoleTemplateService
    /date/*path:
        get:
            consumes:
                - ""
            description: |
                + 本接口返回服务节点当前日期
                + 如果本服务运行在多个节点之上，此接口返回的日期只针对当前访问的服务节点，并不反应整个集群的日期。
            operationId: DateService_Now
            parameters:
                - in: query
                  name: RequestId
                  type: string
            produces:
                - application/json
            responses:
                "200":
                    description: A successful response.
                    schema:
                        $ref: '#/definitions/v1DateResponse'
                default:
                    description: An unexpected error response.
                    schema:
                        $ref: '#/definitions/googlerpcStatus'
            summary: Date Query
            tags:
                - 日期查询
    /date/error:
        get:
            consumes:
                - ""
            description: |
                + 本接口返回服务节点当前错误
                + 如果本服务运行在多个节点之上，此接口返回的日期只针对当前访问的服务节点，并不反应整个集群的错误。
            operationId: DateService_Error3
            parameters:
                - in: query
                  name: RequestId
                  type: string
            produces:
                - application/json
            responses:
                "200":
                    description: A successful response.
                    schema:
                        $ref: '#/definitions/v1DateResponse'
                default:
                    description: An unexpected error response.
                    schema:
                        $ref: '#/definitions/googlerpcStatus'
            summary: Date Query, only return error, for test only
            tags:
                - 日期查询-错误
        post:
            consumes:
                - ""
            description: |
                + 本接口返回服务节点当前错误
                + 如果本服务运行在多个节点之上，此接口返回的日期只针对当前访问的服务节点，并不反应整个集群的错误。
            operationId: DateService_Error4
            parameters:
                - in: body
                  name: body
                  required: true
                  schema:
                    $ref: '#/definitions/v1DateRequest'
            produces:
                - application/json
            responses:
                "200":
                    description: A successful response.
                    schema:
                        $ref: '#/definitions/v1DateResponse'
                default:
                    description: An unexpected error response.
                    schema:
                        $ref: '#/definitions/googlerpcStatus'
            summary: Date Query, only return error, for test only
            tags:
                - 日期查询-错误
    /date/error/**:
        get:
            consumes:
                - ""
            description: |
                + 本接口返回服务节点当前错误
                + 如果本服务运行在多个节点之上，此接口返回的日期只针对当前访问的服务节点，并不反应整个集群的错误。
            operationId: DateService_Error2
            parameters:
                - in: query
                  name: RequestId
                  type: string
            produces:
                - application/json
            responses:
                "200":
                    description: A successful response.
                    schema:
                        $ref: '#/definitions/v1DateResponse'
                default:
                    description: An unexpected error response.
                    schema:
                        $ref: '#/definitions/googlerpcStatus'
            summary: Date Query, only return error, for test only
            tags:
                - 日期查询-错误
    /date/error/*path:
        get:
            consumes:
                - ""
            description: |
                + 本接口返回服务节点当前错误
                + 如果本服务运行在多个节点之上，此接口返回的日期只针对当前访问的服务节点，并不反应整个集群的错误。
            operationId: DateService_Error
            parameters:
                - in: query
                  name: RequestId
                  type: string
            produces:
                - application/json
            responses:
                "200":
                    description: A successful response.
                    schema:
                        $ref: '#/definitions/v1DateResponse'
                default:
                    description: An unexpected error response.
                    schema:
                        $ref: '#/definitions/googlerpcStatus'
            summary: Date Query, only return error, for test only
            tags:
                - 日期查询-错误
    /date/now:
        get:
            consumes:
                - ""
            description: |
                + 本接口返回服务节点当前日期
                + 如果本服务运行在多个节点之上，此接口返回的日期只针对当前访问的服务节点，并不反应整个集群的日期。
            operationId: DateService_Now3
            parameters:
                - in: query
                  name: RequestId
                  type: string
            produces:
                - application/json
            responses:
                "200":
                    description: A successful response.
                    schema:
                        $ref: '#/definitions/v1DateResponse'
                default:
                    description: An unexpected error response.
                    schema:
                        $ref: '#/definitions/googlerpcStatus'
            summary: Date Query
            tags:
                - 日期查询
        post:
            consumes:
                - ""
            description: |
                + 本接口返回服务节点当前日期
                + 如果本服务运行在多个节点之上，此接口返回的日期只针对当前访问的服务节点，并不反应整个集群的日期。
            operationId: DateService_Now4
            parameters:
                - in: body
                  name: body
                  required: true
                  schema:
                    $ref: '#/definitions/v1DateRequest'
            produces:
                - application/json
            responses:
                "200":
                    description: A successful response.
                    schema:
                        $ref: '#/definitions/v1DateResponse'
                default:
                    description: An unexpected error response.
                    schema:
                        $ref: '#/definitions/googlerpcStatus'
            summary: Date Query
            tags:
                - 日期查询
    /date/now/**:
        get:
            consumes:
                - ""
            description: |
                + 本接口返回服务节点当前日期
                + 如果本服务运行在多个节点之上，此接口返回的日期只针对当前访问的服务节点，并不反应整个集群的日期。
            operationId: DateService_Now2
            parameters:
                - in: query
                  name: RequestId
                  type: string
            produces:
                - application/json
            responses:
                "200":
                    description: A successful response.
                    schema:
                        $ref: '#/definitions/v1DateResponse'
                default:
                    description: An unexpected error response.
                    schema:
                        $ref: '#/definitions/googlerpcStatus'
            summary: Date Query
            tags:
                - 日期查询
produces:
    - application/json
swagger: "2.0"
tags:
    - name: DateService
    - name: SoleTemplateService
    - name: SoleSamplesService
