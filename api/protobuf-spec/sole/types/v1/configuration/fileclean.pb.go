// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.33.0
// 	protoc        v4.25.2
// source: sole/types/v1/configuration/fileclean.proto

package configuration

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	durationpb "google.golang.org/protobuf/types/known/durationpb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type FileCleaner struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FilePattern     string               `protobuf:"bytes,1,opt,name=file_pattern,json=filePattern,proto3" json:"file_pattern,omitempty"`                 // file pattern to clean
	CleanInterval   *durationpb.Duration `protobuf:"bytes,2,opt,name=clean_interval,json=cleanInterval,proto3" json:"clean_interval,omitempty"`           // clean interval
	MaxCount        int64                `protobuf:"varint,3,opt,name=max_count,json=maxCount,proto3" json:"max_count,omitempty"`                         // max count of files, older files will be deleted first.
	MaxAge          *durationpb.Duration `protobuf:"bytes,4,opt,name=max_age,json=maxAge,proto3" json:"max_age,omitempty"`                                // max age of files, by modification time, files older will be deleted.
	MinAge          *durationpb.Duration `protobuf:"bytes,5,opt,name=min_age,json=minAge,proto3" json:"min_age,omitempty"`                                // min age of files, by modification time, files younger min_age will not be deleted.
	MaxUsedPercent  float32              `protobuf:"fixed32,6,opt,name=max_used_percent,json=maxUsedPercent,proto3" json:"max_used_percent,omitempty"`    // max used proportion of files.
	MaxIusedPercent float32              `protobuf:"fixed32,7,opt,name=max_iused_percent,json=maxIusedPercent,proto3" json:"max_iused_percent,omitempty"` // max used proportion of inodes.
}

func (x *FileCleaner) Reset() {
	*x = FileCleaner{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sole_types_v1_configuration_fileclean_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FileCleaner) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FileCleaner) ProtoMessage() {}

func (x *FileCleaner) ProtoReflect() protoreflect.Message {
	mi := &file_sole_types_v1_configuration_fileclean_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FileCleaner.ProtoReflect.Descriptor instead.
func (*FileCleaner) Descriptor() ([]byte, []int) {
	return file_sole_types_v1_configuration_fileclean_proto_rawDescGZIP(), []int{0}
}

func (x *FileCleaner) GetFilePattern() string {
	if x != nil {
		return x.FilePattern
	}
	return ""
}

func (x *FileCleaner) GetCleanInterval() *durationpb.Duration {
	if x != nil {
		return x.CleanInterval
	}
	return nil
}

func (x *FileCleaner) GetMaxCount() int64 {
	if x != nil {
		return x.MaxCount
	}
	return 0
}

func (x *FileCleaner) GetMaxAge() *durationpb.Duration {
	if x != nil {
		return x.MaxAge
	}
	return nil
}

func (x *FileCleaner) GetMinAge() *durationpb.Duration {
	if x != nil {
		return x.MinAge
	}
	return nil
}

func (x *FileCleaner) GetMaxUsedPercent() float32 {
	if x != nil {
		return x.MaxUsedPercent
	}
	return 0
}

func (x *FileCleaner) GetMaxIusedPercent() float32 {
	if x != nil {
		return x.MaxIusedPercent
	}
	return 0
}

var File_sole_types_v1_configuration_fileclean_proto protoreflect.FileDescriptor

var file_sole_types_v1_configuration_fileclean_proto_rawDesc = []byte{
	0x0a, 0x2b, 0x73, 0x6f, 0x6c, 0x65, 0x2f, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2f, 0x76, 0x31, 0x2f,
	0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2f, 0x66, 0x69,
	0x6c, 0x65, 0x63, 0x6c, 0x65, 0x61, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x2d, 0x73,
	0x65, 0x61, 0x72, 0x6b, 0x69, 0x6e, 0x67, 0x2e, 0x73, 0x6f, 0x6c, 0x65, 0x2e, 0x61, 0x70, 0x69,
	0x2e, 0x73, 0x6f, 0x6c, 0x65, 0x2e, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x63,
	0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x1a, 0x1e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x64, 0x75,
	0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xcd, 0x02, 0x0a,
	0x0b, 0x46, 0x69, 0x6c, 0x65, 0x43, 0x6c, 0x65, 0x61, 0x6e, 0x65, 0x72, 0x12, 0x21, 0x0a, 0x0c,
	0x66, 0x69, 0x6c, 0x65, 0x5f, 0x70, 0x61, 0x74, 0x74, 0x65, 0x72, 0x6e, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0b, 0x66, 0x69, 0x6c, 0x65, 0x50, 0x61, 0x74, 0x74, 0x65, 0x72, 0x6e, 0x12,
	0x40, 0x0a, 0x0e, 0x63, 0x6c, 0x65, 0x61, 0x6e, 0x5f, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x76, 0x61,
	0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x44, 0x75, 0x72, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x52, 0x0d, 0x63, 0x6c, 0x65, 0x61, 0x6e, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x76, 0x61,
	0x6c, 0x12, 0x1b, 0x0a, 0x09, 0x6d, 0x61, 0x78, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x6d, 0x61, 0x78, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x32,
	0x0a, 0x07, 0x6d, 0x61, 0x78, 0x5f, 0x61, 0x67, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x19, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2e, 0x44, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x06, 0x6d, 0x61, 0x78, 0x41,
	0x67, 0x65, 0x12, 0x32, 0x0a, 0x07, 0x6d, 0x69, 0x6e, 0x5f, 0x61, 0x67, 0x65, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x44, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x06,
	0x6d, 0x69, 0x6e, 0x41, 0x67, 0x65, 0x12, 0x28, 0x0a, 0x10, 0x6d, 0x61, 0x78, 0x5f, 0x75, 0x73,
	0x65, 0x64, 0x5f, 0x70, 0x65, 0x72, 0x63, 0x65, 0x6e, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x02,
	0x52, 0x0e, 0x6d, 0x61, 0x78, 0x55, 0x73, 0x65, 0x64, 0x50, 0x65, 0x72, 0x63, 0x65, 0x6e, 0x74,
	0x12, 0x2a, 0x0a, 0x11, 0x6d, 0x61, 0x78, 0x5f, 0x69, 0x75, 0x73, 0x65, 0x64, 0x5f, 0x70, 0x65,
	0x72, 0x63, 0x65, 0x6e, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x02, 0x52, 0x0f, 0x6d, 0x61, 0x78,
	0x49, 0x75, 0x73, 0x65, 0x64, 0x50, 0x65, 0x72, 0x63, 0x65, 0x6e, 0x74, 0x42, 0x56, 0x5a, 0x54,
	0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x73, 0x65, 0x61, 0x72, 0x4b,
	0x69, 0x6e, 0x67, 0x2f, 0x73, 0x6f, 0x6c, 0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2d, 0x73, 0x70, 0x65, 0x63, 0x2f, 0x73, 0x6f, 0x6c, 0x65, 0x2f,
	0x74, 0x79, 0x70, 0x65, 0x73, 0x2f, 0x76, 0x31, 0x2f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75,
	0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x3b, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_sole_types_v1_configuration_fileclean_proto_rawDescOnce sync.Once
	file_sole_types_v1_configuration_fileclean_proto_rawDescData = file_sole_types_v1_configuration_fileclean_proto_rawDesc
)

func file_sole_types_v1_configuration_fileclean_proto_rawDescGZIP() []byte {
	file_sole_types_v1_configuration_fileclean_proto_rawDescOnce.Do(func() {
		file_sole_types_v1_configuration_fileclean_proto_rawDescData = protoimpl.X.CompressGZIP(file_sole_types_v1_configuration_fileclean_proto_rawDescData)
	})
	return file_sole_types_v1_configuration_fileclean_proto_rawDescData
}

var file_sole_types_v1_configuration_fileclean_proto_msgTypes = make([]protoimpl.MessageInfo, 1)
var file_sole_types_v1_configuration_fileclean_proto_goTypes = []interface{}{
	(*FileCleaner)(nil),         // 0: searking.sole.api.sole.types.v1.configuration.FileCleaner
	(*durationpb.Duration)(nil), // 1: google.protobuf.Duration
}
var file_sole_types_v1_configuration_fileclean_proto_depIdxs = []int32{
	1, // 0: searking.sole.api.sole.types.v1.configuration.FileCleaner.clean_interval:type_name -> google.protobuf.Duration
	1, // 1: searking.sole.api.sole.types.v1.configuration.FileCleaner.max_age:type_name -> google.protobuf.Duration
	1, // 2: searking.sole.api.sole.types.v1.configuration.FileCleaner.min_age:type_name -> google.protobuf.Duration
	3, // [3:3] is the sub-list for method output_type
	3, // [3:3] is the sub-list for method input_type
	3, // [3:3] is the sub-list for extension type_name
	3, // [3:3] is the sub-list for extension extendee
	0, // [0:3] is the sub-list for field type_name
}

func init() { file_sole_types_v1_configuration_fileclean_proto_init() }
func file_sole_types_v1_configuration_fileclean_proto_init() {
	if File_sole_types_v1_configuration_fileclean_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_sole_types_v1_configuration_fileclean_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FileCleaner); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_sole_types_v1_configuration_fileclean_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   1,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_sole_types_v1_configuration_fileclean_proto_goTypes,
		DependencyIndexes: file_sole_types_v1_configuration_fileclean_proto_depIdxs,
		MessageInfos:      file_sole_types_v1_configuration_fileclean_proto_msgTypes,
	}.Build()
	File_sole_types_v1_configuration_fileclean_proto = out.File
	file_sole_types_v1_configuration_fileclean_proto_rawDesc = nil
	file_sole_types_v1_configuration_fileclean_proto_goTypes = nil
	file_sole_types_v1_configuration_fileclean_proto_depIdxs = nil
}
