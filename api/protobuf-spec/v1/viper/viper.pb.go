// Copyright 2020 The searKing Author. All rights reserved.
// Use of this source code is governed by a BSD-style
// license that can be found in the LICENSE file.

// Code generated by protoc-gen-go. DO NOT EDIT.
// source: viper.proto

package viper

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	duration "github.com/golang/protobuf/ptypes/duration"
	_ "github.com/mwitkow/go-proto-validators"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

// 日志等级
type Log_Level int32

const (
	Log_panic   Log_Level = 0
	Log_fatal   Log_Level = 1
	Log_error   Log_Level = 2
	Log_warn    Log_Level = 3
	Log_warning Log_Level = 3
	Log_info    Log_Level = 4
	Log_debug   Log_Level = 5
	Log_trace   Log_Level = 6
)

var Log_Level_name = map[int32]string{
	0: "panic",
	1: "fatal",
	2: "error",
	3: "warn",
	// Duplicate value: 3: "warning",
	4: "info",
	5: "debug",
	6: "trace",
}

var Log_Level_value = map[string]int32{
	"panic":   0,
	"fatal":   1,
	"error":   2,
	"warn":    3,
	"warning": 3,
	"info":    4,
	"debug":   5,
	"trace":   6,
}

func (x Log_Level) String() string {
	return proto.EnumName(Log_Level_name, int32(x))
}

func (Log_Level) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_982e69a07b1241d7, []int{3, 0}
}

// 日志格式
type Log_Format int32

const (
	Log_json Log_Format = 0
	Log_text Log_Format = 1
)

var Log_Format_name = map[int32]string{
	0: "json",
	1: "text",
}

var Log_Format_value = map[string]int32{
	"json": 0,
	"text": 1,
}

func (x Log_Format) String() string {
	return proto.EnumName(Log_Format_name, int32(x))
}

func (Log_Format) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_982e69a07b1241d7, []int{3, 1}
}

type Tracing_Type int32

const (
	Tracing_urber_jaeger Tracing_Type = 0
	Tracing_zipkin       Tracing_Type = 1
)

var Tracing_Type_name = map[int32]string{
	0: "urber_jaeger",
	1: "zipkin",
}

var Tracing_Type_value = map[string]int32{
	"urber_jaeger": 0,
	"zipkin":       1,
}

func (x Tracing_Type) String() string {
	return proto.EnumName(Tracing_Type_name, int32(x))
}

func (Tracing_Type) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_982e69a07b1241d7, []int{4, 0}
}

// Type specifies the type of the sampler: const, probabilistic, rateLimiting, or remote
type Tracing_Jaeger_Sampler_Type int32

const (
	Tracing_Jaeger_Sampler_const         Tracing_Jaeger_Sampler_Type = 0
	Tracing_Jaeger_Sampler_probabilistic Tracing_Jaeger_Sampler_Type = 1
	Tracing_Jaeger_Sampler_rateLimiting  Tracing_Jaeger_Sampler_Type = 2
	Tracing_Jaeger_Sampler_remote        Tracing_Jaeger_Sampler_Type = 3
)

var Tracing_Jaeger_Sampler_Type_name = map[int32]string{
	0: "const",
	1: "probabilistic",
	2: "rateLimiting",
	3: "remote",
}

var Tracing_Jaeger_Sampler_Type_value = map[string]int32{
	"const":         0,
	"probabilistic": 1,
	"rateLimiting":  2,
	"remote":        3,
}

func (x Tracing_Jaeger_Sampler_Type) String() string {
	return proto.EnumName(Tracing_Jaeger_Sampler_Type_name, int32(x))
}

func (Tracing_Jaeger_Sampler_Type) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_982e69a07b1241d7, []int{4, 0, 1, 0}
}

// ViperProto is immutable, so mutex free
type ViperProto struct {
	SystemSecret         string    `protobuf:"bytes,1,opt,name=system_secret,json=systemSecret,proto3" json:"system_secret,omitempty"`
	AppInfo              *AppInfo  `protobuf:"bytes,2,opt,name=app_info,json=appInfo,proto3" json:"app_info,omitempty"`
	Service              *Service  `protobuf:"bytes,3,opt,name=service,proto3" json:"service,omitempty"`
	Log                  *Log      `protobuf:"bytes,4,opt,name=log,proto3" json:"log,omitempty"`
	Tracing              *Tracing  `protobuf:"bytes,5,opt,name=tracing,proto3" json:"tracing,omitempty"`
	Web                  *Web      `protobuf:"bytes,6,opt,name=web,proto3" json:"web,omitempty"`
	Database             *Database `protobuf:"bytes,7,opt,name=database,proto3" json:"database,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *ViperProto) Reset()         { *m = ViperProto{} }
func (m *ViperProto) String() string { return proto.CompactTextString(m) }
func (*ViperProto) ProtoMessage()    {}
func (*ViperProto) Descriptor() ([]byte, []int) {
	return fileDescriptor_982e69a07b1241d7, []int{0}
}

func (m *ViperProto) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ViperProto.Unmarshal(m, b)
}
func (m *ViperProto) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ViperProto.Marshal(b, m, deterministic)
}
func (m *ViperProto) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ViperProto.Merge(m, src)
}
func (m *ViperProto) XXX_Size() int {
	return xxx_messageInfo_ViperProto.Size(m)
}
func (m *ViperProto) XXX_DiscardUnknown() {
	xxx_messageInfo_ViperProto.DiscardUnknown(m)
}

var xxx_messageInfo_ViperProto proto.InternalMessageInfo

func (m *ViperProto) GetSystemSecret() string {
	if m != nil {
		return m.SystemSecret
	}
	return ""
}

func (m *ViperProto) GetAppInfo() *AppInfo {
	if m != nil {
		return m.AppInfo
	}
	return nil
}

func (m *ViperProto) GetService() *Service {
	if m != nil {
		return m.Service
	}
	return nil
}

func (m *ViperProto) GetLog() *Log {
	if m != nil {
		return m.Log
	}
	return nil
}

func (m *ViperProto) GetTracing() *Tracing {
	if m != nil {
		return m.Tracing
	}
	return nil
}

func (m *ViperProto) GetWeb() *Web {
	if m != nil {
		return m.Web
	}
	return nil
}

func (m *ViperProto) GetDatabase() *Database {
	if m != nil {
		return m.Database
	}
	return nil
}

type AppInfo struct {
	BuildVersion         string   `protobuf:"bytes,1,opt,name=build_version,json=buildVersion,proto3" json:"build_version,omitempty"`
	BuildHash            string   `protobuf:"bytes,2,opt,name=build_hash,json=buildHash,proto3" json:"build_hash,omitempty"`
	BuildTime            string   `protobuf:"bytes,3,opt,name=build_time,json=buildTime,proto3" json:"build_time,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AppInfo) Reset()         { *m = AppInfo{} }
func (m *AppInfo) String() string { return proto.CompactTextString(m) }
func (*AppInfo) ProtoMessage()    {}
func (*AppInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_982e69a07b1241d7, []int{1}
}

func (m *AppInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AppInfo.Unmarshal(m, b)
}
func (m *AppInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AppInfo.Marshal(b, m, deterministic)
}
func (m *AppInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AppInfo.Merge(m, src)
}
func (m *AppInfo) XXX_Size() int {
	return xxx_messageInfo_AppInfo.Size(m)
}
func (m *AppInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_AppInfo.DiscardUnknown(m)
}

var xxx_messageInfo_AppInfo proto.InternalMessageInfo

func (m *AppInfo) GetBuildVersion() string {
	if m != nil {
		return m.BuildVersion
	}
	return ""
}

func (m *AppInfo) GetBuildHash() string {
	if m != nil {
		return m.BuildHash
	}
	return ""
}

func (m *AppInfo) GetBuildTime() string {
	if m != nil {
		return m.BuildTime
	}
	return ""
}

type Service struct {
	Name                 string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	DisplayName          string   `protobuf:"bytes,2,opt,name=display_name,json=displayName,proto3" json:"display_name,omitempty"`
	Description          string   `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"`
	Id                   string   `protobuf:"bytes,4,opt,name=id,proto3" json:"id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Service) Reset()         { *m = Service{} }
func (m *Service) String() string { return proto.CompactTextString(m) }
func (*Service) ProtoMessage()    {}
func (*Service) Descriptor() ([]byte, []int) {
	return fileDescriptor_982e69a07b1241d7, []int{2}
}

func (m *Service) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Service.Unmarshal(m, b)
}
func (m *Service) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Service.Marshal(b, m, deterministic)
}
func (m *Service) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Service.Merge(m, src)
}
func (m *Service) XXX_Size() int {
	return xxx_messageInfo_Service.Size(m)
}
func (m *Service) XXX_DiscardUnknown() {
	xxx_messageInfo_Service.DiscardUnknown(m)
}

var xxx_messageInfo_Service proto.InternalMessageInfo

func (m *Service) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Service) GetDisplayName() string {
	if m != nil {
		return m.DisplayName
	}
	return ""
}

func (m *Service) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

func (m *Service) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

type Log struct {
	Level                Log_Level          `protobuf:"varint,1,opt,name=level,proto3,enum=shield.api.v1.viper.Log_Level" json:"level,omitempty"`
	Format               Log_Format         `protobuf:"varint,2,opt,name=format,proto3,enum=shield.api.v1.viper.Log_Format" json:"format,omitempty"`
	Path                 string             `protobuf:"bytes,3,opt,name=path,proto3" json:"path,omitempty"`
	RotationDuration     *duration.Duration `protobuf:"bytes,4,opt,name=rotation_duration,json=rotationDuration,proto3" json:"rotation_duration,omitempty"`
	RotationMaxCount     int32              `protobuf:"varint,5,opt,name=rotation_max_count,json=rotationMaxCount,proto3" json:"rotation_max_count,omitempty"`
	RotationMaxAge       *duration.Duration `protobuf:"bytes,6,opt,name=rotation_max_age,json=rotationMaxAge,proto3" json:"rotation_max_age,omitempty"`
	XXX_NoUnkeyedLiteral struct{}           `json:"-"`
	XXX_unrecognized     []byte             `json:"-"`
	XXX_sizecache        int32              `json:"-"`
}

func (m *Log) Reset()         { *m = Log{} }
func (m *Log) String() string { return proto.CompactTextString(m) }
func (*Log) ProtoMessage()    {}
func (*Log) Descriptor() ([]byte, []int) {
	return fileDescriptor_982e69a07b1241d7, []int{3}
}

func (m *Log) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Log.Unmarshal(m, b)
}
func (m *Log) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Log.Marshal(b, m, deterministic)
}
func (m *Log) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Log.Merge(m, src)
}
func (m *Log) XXX_Size() int {
	return xxx_messageInfo_Log.Size(m)
}
func (m *Log) XXX_DiscardUnknown() {
	xxx_messageInfo_Log.DiscardUnknown(m)
}

var xxx_messageInfo_Log proto.InternalMessageInfo

func (m *Log) GetLevel() Log_Level {
	if m != nil {
		return m.Level
	}
	return Log_panic
}

func (m *Log) GetFormat() Log_Format {
	if m != nil {
		return m.Format
	}
	return Log_json
}

func (m *Log) GetPath() string {
	if m != nil {
		return m.Path
	}
	return ""
}

func (m *Log) GetRotationDuration() *duration.Duration {
	if m != nil {
		return m.RotationDuration
	}
	return nil
}

func (m *Log) GetRotationMaxCount() int32 {
	if m != nil {
		return m.RotationMaxCount
	}
	return 0
}

func (m *Log) GetRotationMaxAge() *duration.Duration {
	if m != nil {
		return m.RotationMaxAge
	}
	return nil
}

type Tracing struct {
	Enable               bool            `protobuf:"varint,1,opt,name=enable,proto3" json:"enable,omitempty"`
	Type                 Tracing_Type    `protobuf:"varint,2,opt,name=type,proto3,enum=shield.api.v1.viper.Tracing_Type" json:"type,omitempty"`
	Jaeger               *Tracing_Jaeger `protobuf:"bytes,3,opt,name=jaeger,proto3" json:"jaeger,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *Tracing) Reset()         { *m = Tracing{} }
func (m *Tracing) String() string { return proto.CompactTextString(m) }
func (*Tracing) ProtoMessage()    {}
func (*Tracing) Descriptor() ([]byte, []int) {
	return fileDescriptor_982e69a07b1241d7, []int{4}
}

func (m *Tracing) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Tracing.Unmarshal(m, b)
}
func (m *Tracing) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Tracing.Marshal(b, m, deterministic)
}
func (m *Tracing) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Tracing.Merge(m, src)
}
func (m *Tracing) XXX_Size() int {
	return xxx_messageInfo_Tracing.Size(m)
}
func (m *Tracing) XXX_DiscardUnknown() {
	xxx_messageInfo_Tracing.DiscardUnknown(m)
}

var xxx_messageInfo_Tracing proto.InternalMessageInfo

func (m *Tracing) GetEnable() bool {
	if m != nil {
		return m.Enable
	}
	return false
}

func (m *Tracing) GetType() Tracing_Type {
	if m != nil {
		return m.Type
	}
	return Tracing_urber_jaeger
}

func (m *Tracing) GetJaeger() *Tracing_Jaeger {
	if m != nil {
		return m.Jaeger
	}
	return nil
}

type Tracing_Jaeger struct {
	Reporter             *Tracing_Jaeger_Reporter `protobuf:"bytes,1,opt,name=reporter,proto3" json:"reporter,omitempty"`
	Sampler              *Tracing_Jaeger_Sampler  `protobuf:"bytes,2,opt,name=sampler,proto3" json:"sampler,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                 `json:"-"`
	XXX_unrecognized     []byte                   `json:"-"`
	XXX_sizecache        int32                    `json:"-"`
}

func (m *Tracing_Jaeger) Reset()         { *m = Tracing_Jaeger{} }
func (m *Tracing_Jaeger) String() string { return proto.CompactTextString(m) }
func (*Tracing_Jaeger) ProtoMessage()    {}
func (*Tracing_Jaeger) Descriptor() ([]byte, []int) {
	return fileDescriptor_982e69a07b1241d7, []int{4, 0}
}

func (m *Tracing_Jaeger) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Tracing_Jaeger.Unmarshal(m, b)
}
func (m *Tracing_Jaeger) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Tracing_Jaeger.Marshal(b, m, deterministic)
}
func (m *Tracing_Jaeger) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Tracing_Jaeger.Merge(m, src)
}
func (m *Tracing_Jaeger) XXX_Size() int {
	return xxx_messageInfo_Tracing_Jaeger.Size(m)
}
func (m *Tracing_Jaeger) XXX_DiscardUnknown() {
	xxx_messageInfo_Tracing_Jaeger.DiscardUnknown(m)
}

var xxx_messageInfo_Tracing_Jaeger proto.InternalMessageInfo

func (m *Tracing_Jaeger) GetReporter() *Tracing_Jaeger_Reporter {
	if m != nil {
		return m.Reporter
	}
	return nil
}

func (m *Tracing_Jaeger) GetSampler() *Tracing_Jaeger_Sampler {
	if m != nil {
		return m.Sampler
	}
	return nil
}

// Reporter configures the reporter. All fields are optional.
type Tracing_Jaeger_Reporter struct {
	// LocalAgentHostPort instructs reporter to send spans to jaeger-agent at this address
	LocalAgentHostPort   string   `protobuf:"bytes,1,opt,name=local_agent_host_port,json=localAgentHostPort,proto3" json:"local_agent_host_port,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Tracing_Jaeger_Reporter) Reset()         { *m = Tracing_Jaeger_Reporter{} }
func (m *Tracing_Jaeger_Reporter) String() string { return proto.CompactTextString(m) }
func (*Tracing_Jaeger_Reporter) ProtoMessage()    {}
func (*Tracing_Jaeger_Reporter) Descriptor() ([]byte, []int) {
	return fileDescriptor_982e69a07b1241d7, []int{4, 0, 0}
}

func (m *Tracing_Jaeger_Reporter) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Tracing_Jaeger_Reporter.Unmarshal(m, b)
}
func (m *Tracing_Jaeger_Reporter) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Tracing_Jaeger_Reporter.Marshal(b, m, deterministic)
}
func (m *Tracing_Jaeger_Reporter) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Tracing_Jaeger_Reporter.Merge(m, src)
}
func (m *Tracing_Jaeger_Reporter) XXX_Size() int {
	return xxx_messageInfo_Tracing_Jaeger_Reporter.Size(m)
}
func (m *Tracing_Jaeger_Reporter) XXX_DiscardUnknown() {
	xxx_messageInfo_Tracing_Jaeger_Reporter.DiscardUnknown(m)
}

var xxx_messageInfo_Tracing_Jaeger_Reporter proto.InternalMessageInfo

func (m *Tracing_Jaeger_Reporter) GetLocalAgentHostPort() string {
	if m != nil {
		return m.LocalAgentHostPort
	}
	return ""
}

// Sampler allows initializing a non-default sampler.  All fields are optional.
type Tracing_Jaeger_Sampler struct {
	// server_url is the address of jaeger-agent's HTTP sampling server
	ServerUrl string                      `protobuf:"bytes,1,opt,name=server_url,json=serverUrl,proto3" json:"server_url,omitempty"`
	Type      Tracing_Jaeger_Sampler_Type `protobuf:"varint,2,opt,name=type,proto3,enum=shield.api.v1.viper.Tracing_Jaeger_Sampler_Type" json:"type,omitempty"`
	// Param is a value passed to the sampler.
	// Valid values for Param field are:
	// - for "const" sampler, 0 or 1 for always false/true respectively
	// - for "probabilistic" sampler, a probability between 0 and 1
	// - for "rateLimiting" sampler, the number of spans per second
	// - for "remote" sampler, param is the same as for "probabilistic"
	//   and indicates the initial sampling rate before the actual one
	//   is received from the mothership.
	Param                float32  `protobuf:"fixed32,3,opt,name=param,proto3" json:"param,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Tracing_Jaeger_Sampler) Reset()         { *m = Tracing_Jaeger_Sampler{} }
func (m *Tracing_Jaeger_Sampler) String() string { return proto.CompactTextString(m) }
func (*Tracing_Jaeger_Sampler) ProtoMessage()    {}
func (*Tracing_Jaeger_Sampler) Descriptor() ([]byte, []int) {
	return fileDescriptor_982e69a07b1241d7, []int{4, 0, 1}
}

func (m *Tracing_Jaeger_Sampler) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Tracing_Jaeger_Sampler.Unmarshal(m, b)
}
func (m *Tracing_Jaeger_Sampler) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Tracing_Jaeger_Sampler.Marshal(b, m, deterministic)
}
func (m *Tracing_Jaeger_Sampler) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Tracing_Jaeger_Sampler.Merge(m, src)
}
func (m *Tracing_Jaeger_Sampler) XXX_Size() int {
	return xxx_messageInfo_Tracing_Jaeger_Sampler.Size(m)
}
func (m *Tracing_Jaeger_Sampler) XXX_DiscardUnknown() {
	xxx_messageInfo_Tracing_Jaeger_Sampler.DiscardUnknown(m)
}

var xxx_messageInfo_Tracing_Jaeger_Sampler proto.InternalMessageInfo

func (m *Tracing_Jaeger_Sampler) GetServerUrl() string {
	if m != nil {
		return m.ServerUrl
	}
	return ""
}

func (m *Tracing_Jaeger_Sampler) GetType() Tracing_Jaeger_Sampler_Type {
	if m != nil {
		return m.Type
	}
	return Tracing_Jaeger_Sampler_const
}

func (m *Tracing_Jaeger_Sampler) GetParam() float32 {
	if m != nil {
		return m.Param
	}
	return 0
}

type Web struct {
	BindAddr      *Web_Net  `protobuf:"bytes,1,opt,name=bind_addr,json=bindAddr,proto3" json:"bind_addr,omitempty"`
	AdvertiseAddr *Web_Net  `protobuf:"bytes,2,opt,name=advertise_addr,json=advertiseAddr,proto3" json:"advertise_addr,omitempty"`
	Tls           *Web_TLS  `protobuf:"bytes,3,opt,name=tls,proto3" json:"tls,omitempty"`
	Cors          *Web_CORS `protobuf:"bytes,4,opt,name=cors,proto3" json:"cors,omitempty"`
	// for debug
	ForceDisableTls      bool     `protobuf:"varint,5,opt,name=force_disable_tls,json=forceDisableTls,proto3" json:"force_disable_tls,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Web) Reset()         { *m = Web{} }
func (m *Web) String() string { return proto.CompactTextString(m) }
func (*Web) ProtoMessage()    {}
func (*Web) Descriptor() ([]byte, []int) {
	return fileDescriptor_982e69a07b1241d7, []int{5}
}

func (m *Web) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Web.Unmarshal(m, b)
}
func (m *Web) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Web.Marshal(b, m, deterministic)
}
func (m *Web) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Web.Merge(m, src)
}
func (m *Web) XXX_Size() int {
	return xxx_messageInfo_Web.Size(m)
}
func (m *Web) XXX_DiscardUnknown() {
	xxx_messageInfo_Web.DiscardUnknown(m)
}

var xxx_messageInfo_Web proto.InternalMessageInfo

func (m *Web) GetBindAddr() *Web_Net {
	if m != nil {
		return m.BindAddr
	}
	return nil
}

func (m *Web) GetAdvertiseAddr() *Web_Net {
	if m != nil {
		return m.AdvertiseAddr
	}
	return nil
}

func (m *Web) GetTls() *Web_TLS {
	if m != nil {
		return m.Tls
	}
	return nil
}

func (m *Web) GetCors() *Web_CORS {
	if m != nil {
		return m.Cors
	}
	return nil
}

func (m *Web) GetForceDisableTls() bool {
	if m != nil {
		return m.ForceDisableTls
	}
	return false
}

type Web_Net struct {
	Host                 string   `protobuf:"bytes,1,opt,name=host,proto3" json:"host,omitempty"`
	Port                 int32    `protobuf:"varint,2,opt,name=port,proto3" json:"port,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Web_Net) Reset()         { *m = Web_Net{} }
func (m *Web_Net) String() string { return proto.CompactTextString(m) }
func (*Web_Net) ProtoMessage()    {}
func (*Web_Net) Descriptor() ([]byte, []int) {
	return fileDescriptor_982e69a07b1241d7, []int{5, 0}
}

func (m *Web_Net) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Web_Net.Unmarshal(m, b)
}
func (m *Web_Net) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Web_Net.Marshal(b, m, deterministic)
}
func (m *Web_Net) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Web_Net.Merge(m, src)
}
func (m *Web_Net) XXX_Size() int {
	return xxx_messageInfo_Web_Net.Size(m)
}
func (m *Web_Net) XXX_DiscardUnknown() {
	xxx_messageInfo_Web_Net.DiscardUnknown(m)
}

var xxx_messageInfo_Web_Net proto.InternalMessageInfo

func (m *Web_Net) GetHost() string {
	if m != nil {
		return m.Host
	}
	return ""
}

func (m *Web_Net) GetPort() int32 {
	if m != nil {
		return m.Port
	}
	return 0
}

type Web_TLS struct {
	Enable        bool             `protobuf:"varint,1,opt,name=enable,proto3" json:"enable,omitempty"`
	KeyPairBase64 *Web_TLS_KeyPair `protobuf:"bytes,2,opt,name=key_pair_base64,json=keyPairBase64,proto3" json:"key_pair_base64,omitempty"`
	KeyPairPath   *Web_TLS_KeyPair `protobuf:"bytes,3,opt,name=key_pair_path,json=keyPairPath,proto3" json:"key_pair_path,omitempty"`
	// service_name is used to verify the hostname on the returned
	// certificates unless InsecureSkipVerify is given. It is also included
	// in the client's handshake to support virtual hosting unless it is
	// an IP address.
	ServiceName          string   `protobuf:"bytes,4,opt,name=service_name,json=serviceName,proto3" json:"service_name,omitempty"`
	AllowedTlsCidrs      []string `protobuf:"bytes,5,rep,name=allowed_tls_cidrs,json=allowedTlsCidrs,proto3" json:"allowed_tls_cidrs,omitempty"`
	WhitelistedPaths     []string `protobuf:"bytes,6,rep,name=whitelisted_paths,json=whitelistedPaths,proto3" json:"whitelisted_paths,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Web_TLS) Reset()         { *m = Web_TLS{} }
func (m *Web_TLS) String() string { return proto.CompactTextString(m) }
func (*Web_TLS) ProtoMessage()    {}
func (*Web_TLS) Descriptor() ([]byte, []int) {
	return fileDescriptor_982e69a07b1241d7, []int{5, 1}
}

func (m *Web_TLS) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Web_TLS.Unmarshal(m, b)
}
func (m *Web_TLS) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Web_TLS.Marshal(b, m, deterministic)
}
func (m *Web_TLS) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Web_TLS.Merge(m, src)
}
func (m *Web_TLS) XXX_Size() int {
	return xxx_messageInfo_Web_TLS.Size(m)
}
func (m *Web_TLS) XXX_DiscardUnknown() {
	xxx_messageInfo_Web_TLS.DiscardUnknown(m)
}

var xxx_messageInfo_Web_TLS proto.InternalMessageInfo

func (m *Web_TLS) GetEnable() bool {
	if m != nil {
		return m.Enable
	}
	return false
}

func (m *Web_TLS) GetKeyPairBase64() *Web_TLS_KeyPair {
	if m != nil {
		return m.KeyPairBase64
	}
	return nil
}

func (m *Web_TLS) GetKeyPairPath() *Web_TLS_KeyPair {
	if m != nil {
		return m.KeyPairPath
	}
	return nil
}

func (m *Web_TLS) GetServiceName() string {
	if m != nil {
		return m.ServiceName
	}
	return ""
}

func (m *Web_TLS) GetAllowedTlsCidrs() []string {
	if m != nil {
		return m.AllowedTlsCidrs
	}
	return nil
}

func (m *Web_TLS) GetWhitelistedPaths() []string {
	if m != nil {
		return m.WhitelistedPaths
	}
	return nil
}

// a public/private key pair
type Web_TLS_KeyPair struct {
	Cert                 string   `protobuf:"bytes,1,opt,name=cert,proto3" json:"cert,omitempty"`
	Key                  string   `protobuf:"bytes,2,opt,name=key,proto3" json:"key,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Web_TLS_KeyPair) Reset()         { *m = Web_TLS_KeyPair{} }
func (m *Web_TLS_KeyPair) String() string { return proto.CompactTextString(m) }
func (*Web_TLS_KeyPair) ProtoMessage()    {}
func (*Web_TLS_KeyPair) Descriptor() ([]byte, []int) {
	return fileDescriptor_982e69a07b1241d7, []int{5, 1, 0}
}

func (m *Web_TLS_KeyPair) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Web_TLS_KeyPair.Unmarshal(m, b)
}
func (m *Web_TLS_KeyPair) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Web_TLS_KeyPair.Marshal(b, m, deterministic)
}
func (m *Web_TLS_KeyPair) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Web_TLS_KeyPair.Merge(m, src)
}
func (m *Web_TLS_KeyPair) XXX_Size() int {
	return xxx_messageInfo_Web_TLS_KeyPair.Size(m)
}
func (m *Web_TLS_KeyPair) XXX_DiscardUnknown() {
	xxx_messageInfo_Web_TLS_KeyPair.DiscardUnknown(m)
}

var xxx_messageInfo_Web_TLS_KeyPair proto.InternalMessageInfo

func (m *Web_TLS_KeyPair) GetCert() string {
	if m != nil {
		return m.Cert
	}
	return ""
}

func (m *Web_TLS_KeyPair) GetKey() string {
	if m != nil {
		return m.Key
	}
	return ""
}

type Web_CORS struct {
	Enable bool `protobuf:"varint,1,opt,name=enable,proto3" json:"enable,omitempty"`
	// returns Access-Control-Allow-Origin: * if false
	UseConditional bool `protobuf:"varint,2,opt,name=use_conditional,json=useConditional,proto3" json:"use_conditional,omitempty"`
	// allowed_origins is a list of origins a cross-domain request can be executed from.
	// If the special "*" value is present in the list, all origins will be allowed.
	// An origin may contain a wildcard (*) to replace 0 or more characters
	// (i.e.: http://*.domain.com). Usage of wildcards implies a small performance penalty.
	// Only one wildcard can be used per origin.
	// Default value is ["*"]
	// return Access-Control-Allow-Origin
	AllowedOrigins []string `protobuf:"bytes,3,rep,name=allowed_origins,json=allowedOrigins,proto3" json:"allowed_origins,omitempty"`
	// allowed_methods is a list of methods the client is allowed to use with
	// cross-domain requests. Default value is simple methods (HEAD, GET and POST).
	AllowedMethods []string `protobuf:"bytes,4,rep,name=allowed_methods,json=allowedMethods,proto3" json:"allowed_methods,omitempty"`
	// allowed_headers is list of non simple headers the client is allowed to use with
	// cross-domain requests.
	// If the special "*" value is present in the list, all headers will be allowed.
	// Default value is [] but "Origin" is always appended to the list.
	AllowedHeaders []string `protobuf:"bytes,5,rep,name=allowed_headers,json=allowedHeaders,proto3" json:"allowed_headers,omitempty"`
	// exposed_headers indicates which headers are safe to expose to the API of a CORS
	// API specification
	// return Access-Control-Expose-Headers
	ExposedHeaders []string `protobuf:"bytes,6,rep,name=exposed_headers,json=exposedHeaders,proto3" json:"exposed_headers,omitempty"`
	// allow_credentials indicates whether the request can include user credentials like
	// cookies, HTTP authentication or client side SSL certificates.
	// return Access-Control-Allow-Credentials
	AllowCredentials []string `protobuf:"bytes,7,rep,name=allow_credentials,json=allowCredentials,proto3" json:"allow_credentials,omitempty"`
	// options_passthrough instructs preflight to let other potential next handlers to
	// process the OPTIONS method. Turn this on if your application handles OPTIONS.
	OptionsPassthrough bool `protobuf:"varint,8,opt,name=options_passthrough,json=optionsPassthrough,proto3" json:"options_passthrough,omitempty"`
	// max_age indicates how long the results of a preflight request
	// can be cached
	MaxAge *duration.Duration `protobuf:"bytes,9,opt,name=max_age,json=maxAge,proto3" json:"max_age,omitempty"`
	// debug flag adds additional output to debug server side CORS issues
	Debug                bool     `protobuf:"varint,10,opt,name=debug,proto3" json:"debug,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Web_CORS) Reset()         { *m = Web_CORS{} }
func (m *Web_CORS) String() string { return proto.CompactTextString(m) }
func (*Web_CORS) ProtoMessage()    {}
func (*Web_CORS) Descriptor() ([]byte, []int) {
	return fileDescriptor_982e69a07b1241d7, []int{5, 2}
}

func (m *Web_CORS) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Web_CORS.Unmarshal(m, b)
}
func (m *Web_CORS) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Web_CORS.Marshal(b, m, deterministic)
}
func (m *Web_CORS) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Web_CORS.Merge(m, src)
}
func (m *Web_CORS) XXX_Size() int {
	return xxx_messageInfo_Web_CORS.Size(m)
}
func (m *Web_CORS) XXX_DiscardUnknown() {
	xxx_messageInfo_Web_CORS.DiscardUnknown(m)
}

var xxx_messageInfo_Web_CORS proto.InternalMessageInfo

func (m *Web_CORS) GetEnable() bool {
	if m != nil {
		return m.Enable
	}
	return false
}

func (m *Web_CORS) GetUseConditional() bool {
	if m != nil {
		return m.UseConditional
	}
	return false
}

func (m *Web_CORS) GetAllowedOrigins() []string {
	if m != nil {
		return m.AllowedOrigins
	}
	return nil
}

func (m *Web_CORS) GetAllowedMethods() []string {
	if m != nil {
		return m.AllowedMethods
	}
	return nil
}

func (m *Web_CORS) GetAllowedHeaders() []string {
	if m != nil {
		return m.AllowedHeaders
	}
	return nil
}

func (m *Web_CORS) GetExposedHeaders() []string {
	if m != nil {
		return m.ExposedHeaders
	}
	return nil
}

func (m *Web_CORS) GetAllowCredentials() []string {
	if m != nil {
		return m.AllowCredentials
	}
	return nil
}

func (m *Web_CORS) GetOptionsPassthrough() bool {
	if m != nil {
		return m.OptionsPassthrough
	}
	return false
}

func (m *Web_CORS) GetMaxAge() *duration.Duration {
	if m != nil {
		return m.MaxAge
	}
	return nil
}

func (m *Web_CORS) GetDebug() bool {
	if m != nil {
		return m.Debug
	}
	return false
}

type Database struct {
	Dsn                  string             `protobuf:"bytes,1,opt,name=dsn,proto3" json:"dsn,omitempty"`
	MaxWaitDuration      *duration.Duration `protobuf:"bytes,2,opt,name=max_wait_duration,json=maxWaitDuration,proto3" json:"max_wait_duration,omitempty"`
	FailAfterDuration    *duration.Duration `protobuf:"bytes,3,opt,name=fail_after_duration,json=failAfterDuration,proto3" json:"fail_after_duration,omitempty"`
	XXX_NoUnkeyedLiteral struct{}           `json:"-"`
	XXX_unrecognized     []byte             `json:"-"`
	XXX_sizecache        int32              `json:"-"`
}

func (m *Database) Reset()         { *m = Database{} }
func (m *Database) String() string { return proto.CompactTextString(m) }
func (*Database) ProtoMessage()    {}
func (*Database) Descriptor() ([]byte, []int) {
	return fileDescriptor_982e69a07b1241d7, []int{6}
}

func (m *Database) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Database.Unmarshal(m, b)
}
func (m *Database) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Database.Marshal(b, m, deterministic)
}
func (m *Database) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Database.Merge(m, src)
}
func (m *Database) XXX_Size() int {
	return xxx_messageInfo_Database.Size(m)
}
func (m *Database) XXX_DiscardUnknown() {
	xxx_messageInfo_Database.DiscardUnknown(m)
}

var xxx_messageInfo_Database proto.InternalMessageInfo

func (m *Database) GetDsn() string {
	if m != nil {
		return m.Dsn
	}
	return ""
}

func (m *Database) GetMaxWaitDuration() *duration.Duration {
	if m != nil {
		return m.MaxWaitDuration
	}
	return nil
}

func (m *Database) GetFailAfterDuration() *duration.Duration {
	if m != nil {
		return m.FailAfterDuration
	}
	return nil
}

func init() {
	proto.RegisterEnum("shield.api.v1.viper.Log_Level", Log_Level_name, Log_Level_value)
	proto.RegisterEnum("shield.api.v1.viper.Log_Format", Log_Format_name, Log_Format_value)
	proto.RegisterEnum("shield.api.v1.viper.Tracing_Type", Tracing_Type_name, Tracing_Type_value)
	proto.RegisterEnum("shield.api.v1.viper.Tracing_Jaeger_Sampler_Type", Tracing_Jaeger_Sampler_Type_name, Tracing_Jaeger_Sampler_Type_value)
	proto.RegisterType((*ViperProto)(nil), "shield.api.v1.viper.ViperProto")
	proto.RegisterType((*AppInfo)(nil), "shield.api.v1.viper.AppInfo")
	proto.RegisterType((*Service)(nil), "shield.api.v1.viper.Service")
	proto.RegisterType((*Log)(nil), "shield.api.v1.viper.Log")
	proto.RegisterType((*Tracing)(nil), "shield.api.v1.viper.Tracing")
	proto.RegisterType((*Tracing_Jaeger)(nil), "shield.api.v1.viper.Tracing.Jaeger")
	proto.RegisterType((*Tracing_Jaeger_Reporter)(nil), "shield.api.v1.viper.Tracing.Jaeger.Reporter")
	proto.RegisterType((*Tracing_Jaeger_Sampler)(nil), "shield.api.v1.viper.Tracing.Jaeger.Sampler")
	proto.RegisterType((*Web)(nil), "shield.api.v1.viper.Web")
	proto.RegisterType((*Web_Net)(nil), "shield.api.v1.viper.Web.Net")
	proto.RegisterType((*Web_TLS)(nil), "shield.api.v1.viper.Web.TLS")
	proto.RegisterType((*Web_TLS_KeyPair)(nil), "shield.api.v1.viper.Web.TLS.KeyPair")
	proto.RegisterType((*Web_CORS)(nil), "shield.api.v1.viper.Web.CORS")
	proto.RegisterType((*Database)(nil), "shield.api.v1.viper.Database")
}

func init() {
	proto.RegisterFile("viper.proto", fileDescriptor_982e69a07b1241d7)
}

var fileDescriptor_982e69a07b1241d7 = []byte{
	// 1467 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xac, 0x56, 0xcd, 0x6e, 0x1b, 0xc9,
	0x11, 0x16, 0x39, 0xfc, 0x2d, 0x4a, 0xd4, 0xa8, 0x9d, 0x04, 0x0c, 0x61, 0x5b, 0x16, 0x6d, 0xc0,
	0xb2, 0x14, 0x0d, 0x2d, 0xc5, 0xb1, 0x61, 0x18, 0x8e, 0x23, 0xc9, 0x09, 0x94, 0x44, 0xb6, 0x85,
	0x91, 0x62, 0x03, 0x51, 0x9c, 0x41, 0x73, 0xa6, 0x39, 0x6c, 0x6b, 0x38, 0x3d, 0xe8, 0x6e, 0x52,
	0x92, 0x4f, 0x7b, 0xdc, 0x87, 0xd9, 0xd3, 0x9e, 0xf7, 0x25, 0xf6, 0x09, 0x0c, 0xe8, 0xb2, 0xa7,
	0x3d, 0xed, 0x0b, 0x2c, 0xfa, 0x67, 0x48, 0x19, 0x90, 0x04, 0x2d, 0xa0, 0x0b, 0x51, 0xac, 0xfa,
	0xbe, 0xaa, 0x9e, 0xea, 0xfa, 0x69, 0x68, 0x8c, 0x69, 0x46, 0xb8, 0x97, 0x71, 0x26, 0x19, 0xba,
	0x25, 0x06, 0x94, 0x24, 0x91, 0x87, 0x33, 0xea, 0x8d, 0xd7, 0x3d, 0x6d, 0x6a, 0x3f, 0x8d, 0xa9,
	0x1c, 0x8c, 0x7a, 0x5e, 0xc8, 0x86, 0xdd, 0xe1, 0x31, 0x95, 0x47, 0xec, 0xb8, 0x1b, 0xb3, 0x35,
	0xcd, 0x58, 0x1b, 0xe3, 0x84, 0x46, 0x58, 0x32, 0x2e, 0xba, 0x13, 0xd1, 0x38, 0x6b, 0xdf, 0x8d,
	0x19, 0x8b, 0x13, 0xd2, 0xd5, 0xff, 0x7a, 0xa3, 0x7e, 0x37, 0x1a, 0x71, 0x2c, 0x29, 0x4b, 0x8d,
	0xbd, 0xf3, 0x73, 0x11, 0xe0, 0xbd, 0x8a, 0xb0, 0xa7, 0x63, 0xdf, 0x87, 0x39, 0x71, 0x2a, 0x24,
	0x19, 0x06, 0x82, 0x84, 0x9c, 0xc8, 0x56, 0xe1, 0x5e, 0x61, 0xb9, 0xee, 0xcf, 0x1a, 0xe5, 0xbe,
	0xd6, 0xa1, 0x67, 0x50, 0xc3, 0x59, 0x16, 0xd0, 0xb4, 0xcf, 0x5a, 0xc5, 0x7b, 0x85, 0xe5, 0xc6,
	0xc6, 0x6d, 0xef, 0x82, 0x33, 0x7b, 0x9b, 0x59, 0xf6, 0xcf, 0xb4, 0xcf, 0xfc, 0x2a, 0x36, 0x02,
	0x7a, 0x0a, 0x55, 0x41, 0xf8, 0x98, 0x86, 0xa4, 0xe5, 0x5c, 0xc1, 0xdb, 0x37, 0x18, 0x3f, 0x07,
	0xa3, 0x15, 0x70, 0x12, 0x16, 0xb7, 0x4a, 0x9a, 0xd3, 0xba, 0x90, 0xb3, 0xcb, 0x62, 0x5f, 0x81,
	0x54, 0x0c, 0xc9, 0x71, 0x48, 0xd3, 0xb8, 0x55, 0xbe, 0x22, 0xc6, 0x81, 0xc1, 0xf8, 0x39, 0x58,
	0xc5, 0x38, 0x26, 0xbd, 0x56, 0xe5, 0x8a, 0x18, 0x1f, 0x48, 0xcf, 0x57, 0x20, 0xf4, 0x1c, 0x6a,
	0x11, 0x96, 0xb8, 0x87, 0x05, 0x69, 0x55, 0x35, 0xe1, 0xce, 0x85, 0x84, 0xd7, 0x16, 0xe4, 0x4f,
	0xe0, 0x9d, 0x04, 0xaa, 0x36, 0x2d, 0x2a, 0xd7, 0xbd, 0x11, 0x4d, 0xa2, 0x60, 0x4c, 0xb8, 0xa0,
	0x2c, 0xcd, 0x73, 0xad, 0x95, 0xef, 0x8d, 0x0e, 0xdd, 0x01, 0x30, 0xa0, 0x01, 0x16, 0x03, 0x9d,
	0xed, 0xba, 0x5f, 0xd7, 0x9a, 0x1d, 0x2c, 0x06, 0x53, 0xb3, 0xa4, 0x43, 0x93, 0xd4, 0xdc, 0x7c,
	0x40, 0x87, 0xa4, 0xc3, 0xa1, 0x6a, 0x93, 0x89, 0x10, 0x94, 0x52, 0x3c, 0x24, 0x36, 0x88, 0x96,
	0xd1, 0x12, 0xcc, 0x46, 0x54, 0x64, 0x09, 0x3e, 0x0d, 0xb4, 0xcd, 0xb8, 0x6f, 0x58, 0xdd, 0x5b,
	0x05, 0xb9, 0x07, 0x8d, 0x88, 0x88, 0x90, 0xd3, 0x4c, 0x15, 0x8d, 0x8d, 0x70, 0x5e, 0x85, 0x9a,
	0x50, 0xa4, 0x91, 0xbe, 0x9b, 0xba, 0x5f, 0xa4, 0x51, 0xe7, 0xfb, 0x12, 0x38, 0xbb, 0x2c, 0x46,
	0x2f, 0xa1, 0x9c, 0x90, 0x31, 0x49, 0x74, 0xc4, 0xe6, 0xc6, 0xdd, 0xcb, 0xae, 0xcd, 0xdb, 0x55,
	0xa8, 0xad, 0xea, 0xd9, 0x97, 0x45, 0xe7, 0xdb, 0x42, 0xc1, 0x37, 0x2c, 0xf4, 0x37, 0xa8, 0xf4,
	0x19, 0x1f, 0x62, 0xa9, 0x4f, 0xd5, 0xdc, 0x58, 0xbc, 0x94, 0xff, 0x0f, 0x0d, 0x9b, 0x3a, 0xb0,
	0x3c, 0xf5, 0xc5, 0x19, 0x96, 0x03, 0x7b, 0x66, 0x2d, 0x23, 0x06, 0x0b, 0x9c, 0x49, 0xdd, 0x00,
	0x41, 0xde, 0x09, 0xb6, 0xae, 0xfe, 0xe8, 0x99, 0x56, 0xf1, 0xf2, 0x56, 0xf1, 0x5e, 0x5b, 0xc0,
	0xd6, 0xc3, 0xb3, 0x2f, 0x8b, 0xf7, 0x61, 0xe9, 0xff, 0x87, 0x6b, 0xab, 0x1f, 0x5f, 0x2d, 0x1f,
	0x3e, 0x5e, 0x7b, 0xfe, 0x71, 0x65, 0xf9, 0x7f, 0x9e, 0x11, 0x1e, 0xbd, 0x3a, 0xc4, 0x6b, 0x9f,
	0x3f, 0xae, 0x3e, 0x5a, 0x7d, 0xe0, 0xbb, 0xb9, 0xf3, 0x9c, 0x8a, 0x9e, 0x00, 0x9a, 0x04, 0x1c,
	0xe2, 0x93, 0x20, 0x64, 0xa3, 0x54, 0xea, 0xca, 0x2c, 0x6f, 0x55, 0xce, 0xbe, 0x2c, 0x16, 0xdd,
	0x99, 0x29, 0xeb, 0x0d, 0x3e, 0xd9, 0x56, 0x76, 0x94, 0x80, 0xfb, 0x15, 0x0b, 0xc7, 0xc4, 0x56,
	0xe6, 0x4d, 0x9c, 0xb2, 0x79, 0x2e, 0xde, 0x66, 0x4c, 0x3a, 0x21, 0x94, 0xf5, 0x1d, 0xa0, 0x3a,
	0x94, 0x33, 0x9c, 0xd2, 0xd0, 0x9d, 0x51, 0x62, 0x1f, 0x4b, 0x9c, 0xb8, 0x05, 0x25, 0x12, 0xce,
	0x19, 0x77, 0x8b, 0xa8, 0x06, 0xa5, 0x63, 0xcc, 0x53, 0xd7, 0x41, 0x0d, 0xa8, 0x2a, 0x89, 0xa6,
	0xb1, 0xeb, 0x28, 0xb5, 0x1a, 0x06, 0x6e, 0x49, 0x61, 0x23, 0xd2, 0x1b, 0xc5, 0x6e, 0x59, 0x89,
	0xaa, 0xb7, 0x88, 0x5b, 0x69, 0x17, 0xdd, 0x42, 0xe7, 0x36, 0x54, 0xcc, 0x45, 0x29, 0xf4, 0x27,
	0xc1, 0x52, 0x77, 0x46, 0x49, 0x92, 0x9c, 0x48, 0xb7, 0xd0, 0xf9, 0xa5, 0x04, 0x55, 0xdb, 0x92,
	0xe8, 0x0f, 0x50, 0x21, 0x29, 0xee, 0x25, 0xa6, 0x56, 0x6b, 0xbe, 0xfd, 0x87, 0xfe, 0x0a, 0x25,
	0x79, 0x9a, 0x11, 0x5b, 0x0f, 0x4b, 0x57, 0xb5, 0xb5, 0x77, 0x70, 0x9a, 0x91, 0x69, 0x45, 0x68,
	0x1e, 0x7a, 0x01, 0x95, 0x4f, 0x98, 0xc4, 0x84, 0xdb, 0xe1, 0x73, 0xff, 0x4a, 0x0f, 0xff, 0xd2,
	0x50, 0xdf, 0x52, 0xda, 0xdf, 0x39, 0x50, 0x31, 0x2a, 0xb4, 0x03, 0x35, 0x4e, 0x32, 0xc6, 0x25,
	0xe1, 0xfa, 0x84, 0x8d, 0x8d, 0x3f, 0x5d, 0xc3, 0x93, 0xe7, 0x5b, 0x8e, 0x3f, 0x61, 0xa3, 0xbf,
	0x43, 0x55, 0xe0, 0x61, 0x96, 0x10, 0x6e, 0xe7, 0xe8, 0xea, 0x75, 0x1c, 0xed, 0x1b, 0x8a, 0x9f,
	0x73, 0xdb, 0x2f, 0xa1, 0x96, 0x3b, 0x47, 0xeb, 0xf0, 0xfb, 0x84, 0x85, 0x38, 0x51, 0x25, 0x93,
	0xca, 0x60, 0xc0, 0x84, 0x0c, 0x94, 0xc9, 0xf6, 0x3d, 0xd2, 0xc6, 0x4d, 0x65, 0xdb, 0x61, 0x42,
	0xee, 0x31, 0x2e, 0xdb, 0x3f, 0x16, 0xa0, 0x6a, 0x7d, 0xaa, 0x79, 0xa2, 0x86, 0x2e, 0xe1, 0xc1,
	0x88, 0x27, 0x96, 0x53, 0x37, 0x9a, 0xff, 0xf0, 0x04, 0xbd, 0xf9, 0xea, 0x0a, 0x1e, 0xff, 0x86,
	0xd3, 0x5e, 0x78, 0x23, 0xbf, 0x53, 0xf5, 0xc6, 0xf1, 0x50, 0x5f, 0x48, 0xd1, 0x37, 0x7f, 0x3a,
	0x5b, 0x50, 0x52, 0x60, 0x55, 0x40, 0x21, 0x4b, 0x85, 0x74, 0x67, 0xd0, 0x02, 0xcc, 0x65, 0x9c,
	0xf5, 0x70, 0x8f, 0x26, 0x54, 0x48, 0x1a, 0xba, 0x05, 0xe4, 0xc2, 0x2c, 0xc7, 0x92, 0xec, 0xd2,
	0x21, 0x95, 0xaa, 0x0a, 0x8b, 0x08, 0xa0, 0xc2, 0xc9, 0x90, 0x49, 0xe2, 0x3a, 0x9d, 0x07, 0xd6,
	0x87, 0x0b, 0xb3, 0x23, 0xde, 0x23, 0x3c, 0x30, 0xd7, 0xe8, 0xce, 0x28, 0xd4, 0x67, 0x9a, 0x1d,
	0xd1, 0xd4, 0x2d, 0x74, 0x7e, 0xaa, 0x81, 0xf3, 0x41, 0xcf, 0xf3, 0x7a, 0x8f, 0xa6, 0x51, 0x80,
	0xa3, 0x28, 0xbf, 0xd2, 0xdb, 0x97, 0x6d, 0x00, 0xef, 0x2d, 0x91, 0x7e, 0x4d, 0xc1, 0x37, 0xa3,
	0x88, 0xa3, 0x6d, 0x68, 0xe2, 0x68, 0x4c, 0xb8, 0xa4, 0x82, 0x18, 0x7e, 0xf1, 0x1a, 0xfc, 0xb9,
	0x09, 0x47, 0x3b, 0xf1, 0xc0, 0x91, 0x89, 0xb8, 0x72, 0x27, 0x2a, 0xe6, 0xc1, 0xee, 0xbe, 0xaf,
	0x80, 0x68, 0x1d, 0x4a, 0x21, 0xe3, 0xc2, 0x0e, 0xae, 0x3b, 0x97, 0x12, 0xb6, 0xdf, 0xf9, 0xfb,
	0xbe, 0x86, 0xa2, 0x15, 0x58, 0xe8, 0x33, 0x1e, 0x92, 0x20, 0xa2, 0x42, 0x75, 0x53, 0xa0, 0x02,
	0x96, 0x75, 0x7f, 0xcd, 0x6b, 0xc3, 0x6b, 0xa3, 0x3f, 0x48, 0x44, 0x7b, 0x0d, 0x9c, 0xb7, 0x44,
	0xcf, 0x4f, 0x55, 0x3e, 0xf9, 0xc6, 0x50, 0xb2, 0x9e, 0xa9, 0xaa, 0x9a, 0xd4, 0x47, 0x96, 0x7d,
	0x2d, 0xb7, 0xcf, 0x8a, 0xe0, 0x1c, 0xec, 0xee, 0x5f, 0xda, 0xb7, 0xbb, 0x30, 0x7f, 0x44, 0x4e,
	0x83, 0x0c, 0x53, 0x1e, 0xa8, 0x1d, 0xf8, 0xf4, 0x89, 0xcd, 0xd1, 0x83, 0xab, 0xbe, 0xd4, 0xfb,
	0x37, 0x39, 0xdd, 0xc3, 0x94, 0xfb, 0x73, 0x47, 0x46, 0xd8, 0xd2, 0x54, 0xb4, 0x03, 0x73, 0x13,
	0x6f, 0x93, 0xf1, 0x7e, 0x5d, 0x5f, 0x0d, 0xeb, 0x6b, 0x4f, 0xed, 0x82, 0x25, 0x98, 0xb5, 0x0f,
	0x0c, 0xb3, 0xfd, 0xcc, 0x0a, 0x6b, 0x58, 0x9d, 0xde, 0x7e, 0x2b, 0xb0, 0x80, 0x93, 0x84, 0x1d,
	0x93, 0x48, 0xe5, 0x2b, 0x08, 0x69, 0xc4, 0x55, 0xd6, 0x9c, 0xe5, 0xba, 0x3f, 0x6f, 0x0d, 0x07,
	0x89, 0xd8, 0x56, 0x6a, 0xb4, 0x0a, 0x0b, 0xc7, 0x03, 0x2a, 0x89, 0xaa, 0x50, 0x12, 0xe9, 0xb3,
	0x89, 0x56, 0x45, 0x63, 0xdd, 0x73, 0x06, 0x15, 0x5a, 0xb4, 0xbb, 0x50, 0xb5, 0x67, 0x52, 0x29,
	0x0d, 0xc9, 0xa4, 0x41, 0xb5, 0x8c, 0x5c, 0x70, 0x8e, 0xc8, 0xa9, 0xdd, 0xc7, 0x4a, 0x6c, 0xff,
	0xe0, 0x40, 0x49, 0x5d, 0xe7, 0xa5, 0x59, 0x7e, 0x08, 0xf3, 0x23, 0x41, 0x82, 0x90, 0xa5, 0x11,
	0x55, 0xb3, 0x1d, 0x27, 0x9a, 0x5e, 0xf3, 0x9b, 0x23, 0x41, 0xb6, 0xa7, 0x5a, 0x05, 0xcc, 0xbf,
	0x89, 0x71, 0x1a, 0xd3, 0x54, 0x15, 0x9e, 0x3a, 0x65, 0xd3, 0xaa, 0xdf, 0x19, 0xed, 0x79, 0xe0,
	0x90, 0xc8, 0x01, 0x8b, 0x54, 0xc1, 0x9d, 0x07, 0xbe, 0x31, 0xda, 0xf3, 0xc0, 0x01, 0xc1, 0x11,
	0x99, 0xe4, 0x28, 0x07, 0xee, 0x18, 0xad, 0x02, 0x92, 0x93, 0x8c, 0x89, 0x73, 0x40, 0x93, 0xa0,
	0xa6, 0x55, 0xe7, 0xc0, 0x55, 0x9b, 0xf7, 0x20, 0xe4, 0x24, 0x22, 0xa9, 0xa4, 0x38, 0x11, 0xad,
	0xaa, 0xc9, 0xa5, 0x36, 0x6c, 0x4f, 0xf5, 0xa8, 0x0b, 0xb7, 0x98, 0x7e, 0x8a, 0x88, 0x20, 0xc3,
	0x42, 0xc8, 0x01, 0x67, 0xa3, 0x78, 0xd0, 0xaa, 0xe9, 0xaf, 0x47, 0xd6, 0xb4, 0x37, 0xb5, 0xa0,
	0x43, 0xa8, 0xe6, 0x4b, 0xb5, 0x7e, 0x63, 0x4b, 0xb5, 0x32, 0xd4, 0xcb, 0x54, 0xcd, 0x34, 0xbd,
	0x01, 0x5b, 0xa0, 0xe3, 0x9b, 0x3f, 0x9d, 0x6f, 0x8a, 0x50, 0xcb, 0x5f, 0x83, 0xea, 0x76, 0x23,
	0x91, 0x3f, 0xf7, 0x94, 0x88, 0x52, 0x58, 0x50, 0x27, 0x3a, 0xc6, 0x54, 0x4e, 0x9f, 0x25, 0xc5,
	0x1b, 0x3b, 0xdb, 0xfc, 0x10, 0x9f, 0x7c, 0xc0, 0x54, 0x4e, 0x5e, 0x25, 0x1c, 0x6e, 0xf5, 0x31,
	0x4d, 0x02, 0xdc, 0x97, 0x84, 0x4f, 0x23, 0x3a, 0x37, 0x16, 0x71, 0x41, 0xb9, 0xdf, 0x54, 0xde,
	0x27, 0xdc, 0x67, 0xff, 0xfd, 0x4b, 0x4c, 0x65, 0x82, 0x7b, 0xde, 0x80, 0xf5, 0x98, 0xf4, 0xc2,
	0xb0, 0x3b, 0xc0, 0xf4, 0x84, 0xa6, 0x5e, 0x38, 0x20, 0x69, 0xd7, 0xb4, 0x6f, 0x17, 0x67, 0xb4,
	0x3b, 0x5e, 0xef, 0xea, 0xf6, 0x7d, 0xa1, 0x7f, 0x7b, 0x15, 0x7d, 0x8e, 0x3f, 0xff, 0x1a, 0x00,
	0x00, 0xff, 0xff, 0xa6, 0x67, 0x5a, 0xed, 0x25, 0x0d, 0x00, 0x00,
}
