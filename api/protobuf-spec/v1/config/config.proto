syntax = "proto3";

package sole.api.v1.config;
import "google/protobuf/duration.proto";

option go_package = "github.com/searKing/sole/api/protobuf-spec/v1/config;config";

// 参数配置文件
message Configuration {
  Log log = 1;
  Web web = 2;
  map<string, string> dynamic_environments = 3;// 动态环境变量，用来更新程序环境变量；比如织云只能下发文件，此处可以实现间接下发环境变量

  // https://gocloud.dev/
  string secret_keeper_url = 4; // 服务秘钥，用于解密s3等敏感信息，"base64key://smGbjm71Nxd1Ig5FS0wj9SlbzAIrnolCz9bQQ6uAhl4="

  GoParam go = 5;
  repeated FileCleanParam file_cleaners = 6; // 文件清理
  // Go相关参数
  message GoParam{
    google.protobuf.Duration gc_interval = 1; // CGO GC 间隔, cgo本身强制2min, forcegcperiod
  }

  // 文件清理参数
  message FileCleanParam {
    string file_pattern = 1; // 文件通配符
    google.protobuf.Duration clean_interval = 2; // 文件最大保存时间
    int64 max_count = 3; //文件保留分片个数
    google.protobuf.Duration max_age = 4; // 文件最大保存时间-修改时间
    google.protobuf.Duration min_age = 5; // 文件最小保存时间，低于这个的进行保护，不删除
    float max_used_percent = 6; // 文件空间百分比
    float max_iused_percent = 7; // 文件最大Node百分比
  }

  message Web {
    Net bind_addr = 1; // for listen
    google.protobuf.Duration shutdown_delay_duration = 2; // ShutdownDelayDuration allows to block shutdown for graceful exit.
    int64 max_concurrency_unary = 3; // for concurrent parallel requests of unary server, The default is 0 (no limit is given)
    int64 max_concurrency_stream = 4; // for concurrent parallel requests of stream server, The default is 0 (no limit is given)
    google.protobuf.Duration burst_limit_timeout_unary = 5; // for concurrent parallel requests of unary server, The default is 0 (no limit is given)
    google.protobuf.Duration burst_limit_timeout_stream = 6; // for concurrent parallel requests of stream server, The default is 0 (no limit is given)
    google.protobuf.Duration handled_timeout_unary = 7; // for max handing time of unary server, The default is 0 (no limit is given)
    google.protobuf.Duration handled_timeout_stream = 8; // for max handing time of unary server, The default is 0 (no limit is given)
    int64 max_receive_message_size_in_bytes = 9; // sets the maximum message size in bytes the grpc server can receive, The default is 0 (no limit is given).
    int64 max_send_message_size_in_bytes = 10; // sets the maximum message size in bytes the grpc server can send, The default is 0 (no limit is given).

    // for debug
    bool force_disable_tls = 11; // disable tls

    message Net {
      string host = 1;
      int32 port = 2;
    }
  }

  message Log {
    // 日志等级
    enum Level {
      option allow_alias = true;
      panic = 0;
      fatal = 1;
      error = 2;
      warn = 3;
      warning = 3;
      info = 4;
      debug = 5;
      trace = 6;
    }
    // 日志格式
    enum Format {
      json = 0;
      text = 1;
      glog = 2;
      glog_human = 3;
    }
    Level level = 1 ; // 日志最低打印等级
    Format format = 2 ; // 日志格式
    string path = 3; //日志存储路径
    google.protobuf.Duration rotation_duration = 4; // 日志循环覆盖最大分片时间
    int64 rotation_size_in_byte = 5; //日志循环最大分片大小,单位为Byte
    int64 rotation_max_count = 6; //日志循环覆盖保留分片个数
    google.protobuf.Duration rotation_max_age = 7; // 文件最大保存时间
    bool report_caller = 8;// 调用者堆栈
    bool mute_directly_output = 9;// warn及更高级别日志是否打印到标准输出
    Level mute_directly_output_level = 10; // 标准输出日志最低打印等级

    int64  truncate_message_size_to = 11; // 日志 message 最大长度，超长则截断; 当前仅glog和glog_human模式生效
    int64  truncate_key_size_to = 12; // 日志键值对的key最大长度，超长则截断; 当前仅glog和glog_human模式生效
    int64  truncate_value_size_to = 13; // 日志键值对的value最大长度，超长则截断; 当前仅glog和glog_human模式生效
  }
}