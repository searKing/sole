// Code generated by "go-option -type=threadDo"; DO NOT EDIT.
// Install go-option by "go get -u github.com/searKing/golang/tools/go-option"

package sync

// A ThreadDoOption sets options.
type ThreadDoOption interface {
	apply(*threadDo)
}

// EmptyThreadDoOption does not alter the configuration. It can be embedded
// in another structure to build custom options.
//
// This API is EXPERIMENTAL.
type EmptyThreadDoOption struct{}

func (EmptyThreadDoOption) apply(*threadDo) {}

// ThreadDoOptionFunc wraps a function that modifies threadDo into an
// implementation of the ThreadDoOption interface.
type ThreadDoOptionFunc func(*threadDo)

func (f ThreadDoOptionFunc) apply(do *threadDo) {
	f(do)
}
func (o *threadDo) ApplyOptions(options ...ThreadDoOption) *threadDo {
	for _, opt := range options {
		if opt == nil {
			continue
		}
		opt.apply(o)
	}
	return o
}

// WiththreadDoEscapeThread sets EscapeThread in threadDo.
// call the function f in the same thread or escape thread
func WiththreadDoEscapeThread(v bool) ThreadDoOption {
	return ThreadDoOptionFunc(func(o *threadDo) {
		o.EscapeThread = v
	})
}
