// Code generated by "go-option -type Build"; DO NOT EDIT.
// Install go-option by "go get install github.com/searKing/golang/tools/go-option"

package resolver

// A BuildOption sets options.
type BuildOption interface {
	apply(*Build)
}

// EmptyBuildOption does not alter the configuration. It can be embedded
// in another structure to build custom options.
//
// This API is EXPERIMENTAL.
type EmptyBuildOption struct{}

func (EmptyBuildOption) apply(*Build) {}

// BuildOptionFunc wraps a function that modifies Build into an
// implementation of the BuildOption interface.
type BuildOptionFunc func(*Build)

func (f BuildOptionFunc) apply(do *Build) {
	f(do)
}

// ApplyOptions call apply() for all options one by one
func (o *Build) ApplyOptions(options ...BuildOption) *Build {
	for _, opt := range options {
		if opt == nil {
			continue
		}
		opt.apply(o)
	}
	return o
}

// WithBuildClientConn sets ClientConn in Build.
func WithBuildClientConn(v ClientConn) BuildOption {
	return BuildOptionFunc(func(o *Build) {
		o.ClientConn = v
	})
}
